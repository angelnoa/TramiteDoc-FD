--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 7.1.831
--   Created On : viernes, 01 agosto, 2008 
--   DBMS       : PostgreSQL 
--   -------------------------------------------------- 


--  Drop Foreign Key Constraints 
ALTER TABLE Archivo DROP CONSTRAINT Tranferencias
;
ALTER TABLE Archivo DROP CONSTRAINT Unidad_Archivamiento
;
ALTER TABLE CONTACTOS DROP CONSTRAINT DISTRITO
;
ALTER TABLE CONTACTOS DROP CONSTRAINT Pais
;
ALTER TABLE CORRELATIVOS DROP CONSTRAINT codigofondo
;
ALTER TABLE CORRELATIVOS DROP CONSTRAINT codigotipo
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT DCAJ_mExpQueja
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT DCAJ_tCatalogo001
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT DCAJ_tCatalogo
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT DCAJ_tCatalogo002
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT DISTRITO
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT CONTACTOS
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT OFICINAS
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT Pais
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT PERSONAL
;
ALTER TABLE DCAJ_mDocDetalle DROP CONSTRAINT DNJ_tDoc_Id
;
ALTER TABLE DCAJ_mExpQueja DROP CONSTRAINT DNJ_mDependenciaJudicial
;
ALTER TABLE DCAJ_mquejado DROP CONSTRAINT DCAJ_tCatalogo
;
ALTER TABLE DCAJ_mquejado DROP CONSTRAINT CONTACTOS
;
ALTER TABLE DCAJ_mquejado DROP CONSTRAINT DCAJ_mDocDetalle
;
ALTER TABLE DCAJ_mSegQueja DROP CONSTRAINT DCAJ_mDocDetalle
;
ALTER TABLE DCAJ_mSegQueja DROP CONSTRAINT OFICINAS
;
ALTER TABLE DCAJ_mSegQueja DROP CONSTRAINT PERSONAL
;
ALTER TABLE DCAJ_mSegQueja DROP CONSTRAINT TIPO_DOCUMENTO
;
ALTER TABLE DISTRITO DROP CONSTRAINT PROVINCIA
;
ALTER TABLE DNJ_mDependenciaJudicial DROP CONSTRAINT DNJ_tDistritoJudicial
;
ALTER TABLE DNJ_mDependenciaJudicial DROP CONSTRAINT DNJ_tTipo_DepJud
;
ALTER TABLE DOC_ENTRADA DROP CONSTRAINT PERSONAL
;
ALTER TABLE DOC_ENTRADA DROP CONSTRAINT OFICINAS
;
ALTER TABLE DOC_INTERNO_DESTINO DROP CONSTRAINT PERSONAL
;
ALTER TABLE DOC_INTERNO_ORIGEN DROP CONSTRAINT PERSONAL
;
ALTER TABLE DOC_SALIDA_DESTINO DROP CONSTRAINT tCostos
;
ALTER TABLE DOC_SALIDA_DESTINO DROP CONSTRAINT CONTACTOS
;
ALTER TABLE DOC_SALIDA_DESTINO DROP CONSTRAINT tipo_envio
;
ALTER TABLE DOC_SALIDA_ORIGEN DROP CONSTRAINT PERSONAL
;
ALTER TABLE INSTITUCION DROP CONSTRAINT DISTRITO
;
ALTER TABLE INSTITUCION DROP CONSTRAINT GRUPO
;
ALTER TABLE INSTITUCION DROP CONSTRAINT Pais
;
ALTER TABLE INSTITUCION DROP CONSTRAINT codigopais
;
ALTER TABLE institucion_dump DROP CONSTRAINT DISTRITO
;
ALTER TABLE institucion_dump DROP CONSTRAINT GRUPO
;
ALTER TABLE institucion_dump DROP CONSTRAINT Pais
;
ALTER TABLE PROVINCIA DROP CONSTRAINT DEPARTAMENTO
;
ALTER TABLE r_seg_informacion DROP CONSTRAINT t_seg_menu
;
ALTER TABLE SERIE_DOCUMENTAL DROP CONSTRAINT OFICINAS
;
ALTER TABLE SERIE_DOCUMENTAL DROP CONSTRAINT SERIE_DOCUMENTAL
;

--  Drop Tables, Stored Procedures and Views 
DROP TABLE Archivo
;
DROP TABLE archivo_serpost
;
DROP TABLE CONTACTOS
;
DROP TABLE CORRELATIVOS
;
DROP TABLE DCAJ_mDocDetalle
;
DROP TABLE DCAJ_mExpQueja
;
DROP TABLE DCAJ_mquejado
;
DROP TABLE DCAJ_mSegQueja
;
DROP TABLE DCAJ_tCatalogo
;
DROP TABLE dcostos
;
DROP TABLE DEPARTAMENTO
;
DROP TABLE DISTRITO
;
DROP TABLE DNJ_mDependenciaJudicial
;
DROP TABLE DNJ_tDistritoJudicial
;
DROP TABLE DNJ_tDoc_Id
;
DROP TABLE DNJ_tTipo_DepJud
;
DROP TABLE DNJ_tusuario
;
DROP TABLE DOC_ENTRADA
;
DROP TABLE DOC_INTERNO_DESTINO
;
DROP TABLE DOC_INTERNO_ORIGEN
;
DROP TABLE DOC_SALIDA_DESTINO
;
DROP TABLE DOC_SALIDA_ORIGEN
;
DROP TABLE DOCUMENTO
;
DROP TABLE documentos_serpost
;
DROP TABLE dtarifaspais
;
DROP TABLE EXPEDIENTE
;
DROP TABLE FONDO
;
DROP TABLE GRUPO
;
DROP TABLE hist_parte_diario
;
DROP TABLE INSTITUCION
;
DROP TABLE institucion_dump
;
DROP TABLE MOTIVO
;
DROP TABLE motivos_serpost
;
DROP TABLE MOVIMIENTOS_DOC
;
DROP TABLE OFICINAS
;
DROP TABLE Pais
;
DROP TABLE pbcatcol
;
DROP TABLE pbcatedt
;
DROP TABLE pbcatfmt
;
DROP TABLE pbcattbl
;
DROP TABLE pbcatvld
;
DROP TABLE PERSONAL
;
DROP TABLE PROVINCIA
;
DROP TABLE r_seg_informacion
;
DROP TABLE RowGenerator
;
DROP TABLE SERIE_DOCUMENTAL
;
DROP TABLE serie_externa
;
DROP TABLE t_correlativo
;
DROP TABLE t_seg_menu
;



--  Create Tables 
CREATE TABLE Archivo ( 
	numero_ingreso varchar(255) NOT NULL,
	unidad_arch integer NULL,
	codigo_trans varchar(255) NULL,
	Tipo_unidad varchar(255) NULL,
	codigo_fondo varchar(255) NULL,
	codigo_serie varchar(255) NULL,
	cuerpo integer NULL,
	balda integer NULL,
	observa text NULL,
	fecha_ingreso date NULL,
	desde_fecha date NULL,
	codigo_oficina varchar(255) NULL,
	hasta_fecha date NULL
)
;

CREATE TABLE archivo_serpost ( 
	nombre varchar(255) NOT NULL,
	fecha_envio date NOT NULL,
	fecha_proceso date NOT NULL,
	estado varchar(255) NOT NULL,
	ruta varchar(120) NULL,
	usuario varchar(12) NULL
)
;

CREATE TABLE CONTACTOS ( 
	codigo_contacto varchar(255) NOT NULL,
	codigo_institucion varchar(255) NULL,
	nombre_contacto varchar(80) NULL,
	cargo_contacto varchar(80) NULL,
	grado_contacto varchar(80) NULL,
	direccion_contacto varchar(80) NULL,
	Codigo_Pais varchar(255) NULL,
	cod_dpto varchar(255) NULL,
	cod_prov varchar(255) NULL,
	cod_dist varchar(255) NULL,
	es_responsable varchar(255) NULL,
	usumod varchar(255) NULL,
	fecmod timestamp NULL
)
;

CREATE TABLE CORRELATIVOS ( 
	codigo_oficina varchar(255) NOT NULL,
	codigo_fondo varchar(255) NOT NULL,
	codigo_tipo varchar(255) NOT NULL,
	Ultimo varchar(255) NULL,
	UsuMod varchar(10) NULL,
	FecMod timestamp NULL,
	modificado varchar(255) NULL
)
;

CREATE TABLE DCAJ_mDocDetalle ( 
	Codigo_Documento varchar(255) NOT NULL,
	Tipo_Catal_NivImport varchar(255) NULL,
	Codigo_Pais varchar(255) NULL,
	codigo_fondo varchar(255) NULL,
	Tipo_Catal_DocAtendido varchar(255) NULL,
	codigo_oficina varchar(255) NULL,
	codigo_institucion varchar(255) NULL,
	cod_dpto varchar(255) NULL,
	Cod_Catal_Tipotra varchar(255) NULL,
	Tipo_Catal_Tipotra varchar(255) NULL,
	cod_prov varchar(255) NULL,
	Cod_Catal_DocAtendido varchar(255) NULL,
	cod_dist varchar(255) NULL,
	codigo_personal varchar(255) NULL,
	Cod_Catal_NivImport varchar(255) NULL,
	codigo_contacto varchar(255) NULL,
	Flag_Demandante varchar(255) NULL,
	Tipo_Doc varchar(255) NULL,
	Flag_Demandado varchar(255) NULL,
	Cod_Expediente varchar(255) NULL,
	Flag_Tercero varchar(255) NULL,
	Cod_LugarQueja varchar(255) NULL,
	Flag_Peticion varchar(255) NULL,
	AbogaDesignado varchar(255) NULL,
	Descri_Defensalegal varchar(120) NULL,
	Cod_Exoneracion varchar(255) NULL,
	TIpo_Exoneracion varchar(255) NULL,
	Descri_Exoneracion varchar(255) NULL,
	Desci_Entrevista varchar(120) NULL,
	Fecha_Entrevista timestamp NULL,
	Flag_Proyecto varchar(255) NULL,
	Cod_Proyecto varchar(255) NULL,
	Tipo_Proyecto1 varchar(255) NULL,
	Sub_TipoProyecto varchar(255) NULL,
	Tipo_Proyecto2 varchar(255) NULL,
	Cod_Informe varchar(255) NULL,
	Cod_EstadoTramite varchar(255) NULL,
	Descri_Estadotramite varchar(120) NULL,
	Fecha_IniciaDoc date NULL,
	UsuMod varchar(255) NULL,
	FecMod timestamp NULL,
	Tipo_Institucion varchar(255) NULL,
	Nom_Demandante varchar(120) NULL,
	Nom_Demandado varchar(120) NULL,
	Nom_tercero varchar(120) NULL,
	Flg_TibunalCons varchar(255) NULL,
	Nom_Secretario varchar(250) NULL,
	Descri_Pruebas text NULL,
	FecCrea timestamp NULL,
	UsuCrea varchar(255) NULL,
	Nombre_Quejoso varchar(255) NULL,
	ApellPat_Quejoso varchar(255) NULL,
	ApellMat_Quejoso varchar(255) NULL,
	Descri_Motivo text NULL,
	Num_Ruc varchar(255) NULL,
	Num_Identidad varchar(255) NULL,
	Domicilio_Real varchar(300) NULL,
	Domicilio_Legal varchar(300) NULL,
	Telefono_Quejoso varchar(30) NULL,
	Correo_Quejoso varchar(80) NULL,
	Tipo_Denunciante varchar(255) NULL,
	Es_Elafectado varchar(255) NULL,
	Num_Informe varchar(255) NULL,
	Fecha_Informe date NULL,
	Descri_Informe varchar(300) NULL,
	Nom_Dirigido varchar(80) NULL
)
;

CREATE TABLE DCAJ_mExpQueja ( 
	Cod_Expediente varchar(255) NOT NULL,
	Cod_LugarQueja varchar(255) NOT NULL,
	Cod_DepJud varchar(255) NULL,
	AbogaDesignado varchar(255) NOT NULL,
	Num_ExpeJudicial varchar(255) NULL,
	UsuCrea varchar(255) NULL,
	FecCrea timestamp NULL,
	Fecha_IniciaExp date NULL,
	UsuMod varchar(255) NULL,
	FecMod timestamp NULL,
	Codigo_Doc varchar(255) NULL
)
;

CREATE TABLE DCAJ_mquejado ( 
	Codigo_Documento varchar(255) NOT NULL,
	Secuencia_Documento varchar(255) NOT NULL,
	Cod_Catal_Cargo varchar(255) NULL,
	codigo_institucion varchar(255) NULL,
	codigo_contacto varchar(255) NULL,
	Tipo_Catal_Cargo varchar(255) NULL,
	Tipo_condicion varchar(255) NULL,
	UsuMod varchar(255) NULL,
	UsuCrea varchar(255) NULL,
	FecMod timestamp NULL,
	FecCrea timestamp NULL
)
;

CREATE TABLE DCAJ_mSegQueja ( 
	Codigo_Documento varchar(255) NOT NULL,
	Secuencia_Seguimiento varchar(255) NOT NULL,
	Fecha_iniciaSeg date NULL,
	codigo_personal varchar(255) NULL,
	codigo_tipo varchar(255) NULL,
	codigo_fondo varchar(255) NULL,
	Nom_Remitente varchar(120) NULL,
	codigo_oficina varchar(255) NULL,
	Sumilla_Asunto varchar(300) NULL,
	UsuMod varchar(255) NULL,
	FecMod timestamp NULL,
	UsuCrea varchar(255) NULL,
	FecCrea timestamp NULL
)
;

CREATE TABLE DCAJ_tCatalogo ( 
	Cod_Catal varchar(255) NOT NULL,
	Tipo_Catal varchar(255) NOT NULL,
	Descripcion varchar(120) NULL,
	UsuMod varchar(255) NULL,
	FecMod timestamp NULL,
	UsuCrea varchar(255) NULL,
	Flag_Estado varchar(255) NULL,
	FecCrea timestamp NULL
)
;

CREATE TABLE dcostos ( 
	cod_ser varchar(255) NOT NULL,
	secuencia varchar(255) NOT NULL,
	item varchar(255) NOT NULL,
	rangoini numeric(8,3) NOT NULL,
	rangofin numeric(8,3) NOT NULL,
	costofijo numeric(8,3) NOT NULL,
	costounidad numeric(8,3) NULL
)
;

CREATE TABLE DEPARTAMENTO ( 
	cod_dpto varchar(255) NOT NULL,
	des_dpo varchar(255) NOT NULL
)
;

CREATE TABLE DISTRITO ( 
	cod_dpto varchar(255) NOT NULL,
	cod_prov varchar(255) NOT NULL,
	cod_dist varchar(255) NOT NULL,
	des_dist varchar(255) NOT NULL
)
;

CREATE TABLE DNJ_mDependenciaJudicial ( 
	Cod_DepJud varchar(255) NOT NULL,
	Cod_DistritoJudicial varchar(255) NULL,
	Cod_TipoDepJud varchar(255) NULL,
	Nombre varchar(150) NULL,
	Flg_Activo varchar(255) NULL,
	UsuCrea varchar(255) NULL,
	FecCrea timestamp NULL,
	UsuMod varchar(255) NULL,
	FecMod timestamp NULL
)
;

CREATE TABLE DNJ_tDistritoJudicial ( 
	Cod_DistritoJudicial varchar(255) NOT NULL,
	Nombre varchar(30) NULL,
	Flg_Activo varchar(255) NULL,
	Usucrea varchar(10) NULL,
	FecCrea timestamp NULL,
	UsuMod varchar(10) NULL,
	FecMod timestamp NULL
)
;

CREATE TABLE DNJ_tDoc_Id ( 
	Tipo_Doc varchar(255) NOT NULL,
	Descripcion varchar(30) NULL,
	Abreviatura varchar(10) NULL,
	Tipo_Dato varchar(255) NULL,
	Longitud varchar(255) NULL
)
;

CREATE TABLE DNJ_tTipo_DepJud ( 
	Cod_TipoDepJud varchar(255) NOT NULL,
	Nombre varchar(25) NULL,
	Flg_Activo varchar(255) NULL,
	UsuCrea varchar(10) NULL,
	FecCrea timestamp NULL,
	UsuMod varchar(10) NULL,
	FecMod timestamp NULL
)
;

CREATE TABLE DNJ_tusuario ( 
	AbogaLogon varchar(255) NOT NULL,
	Descripcion varchar(50) NULL,
	AbogaDesignado varchar(8) NULL,
	FecMod date NULL,
	FecCrea date NULL
)
;

CREATE TABLE DOC_ENTRADA ( 
	codigo_documento varchar(255) NOT NULL,
	destinatario varchar(255) NULL,
	fondo_destino varchar(255) NULL,
	remitente varchar(255) NULL,
	destino_documento varchar(255) NULL,
	origen_documento varchar(255) NULL,
	usumod varchar(255) NULL,
	fecmod timestamp NULL
)
;

CREATE TABLE DOC_INTERNO_DESTINO ( 
	codigo_documento varchar(255) NOT NULL,
	secuencia_documento varchar(255) NOT NULL,
	codigo_personal varchar(255) NULL,
	codigo_fondo varchar(255) NULL,
	codigo_oficina varchar(255) NULL,
	usumod varchar(255) NULL,
	fecmod timestamp NULL
)
;

CREATE TABLE DOC_INTERNO_ORIGEN ( 
	codigo_documento varchar(255) NOT NULL,
	codigo_personal varchar(255) NULL,
	codigo_fondo varchar(255) NULL,
	codigo_oficina varchar(255) NULL,
	usumod varchar(255) NULL,
	fecmod timestamp NULL
)
;

CREATE TABLE DOC_SALIDA_DESTINO ( 
	codigo_documento varchar(255) NOT NULL,
	secuencia_documento varchar(255) NOT NULL,
	codigo_contacto varchar(255) NULL,
	codigo_institucion varchar(255) NULL,
	usumod varchar(255) NULL,
	fecmod timestamp NULL,
	peso numeric(8,3) NULL,
	peso_courier numeric(8,3) NULL,
	costo numeric(8,3) NULL,
	igv numeric(8,3) NULL,
	cancelado varchar(255) NULL,
	conciliado varchar(255) NULL,
	costo_courier numeric(8,3) NULL,
	cod_ser varchar(255) NULL,
	secuencia varchar(255) NULL,
	tipo_envio varchar(255) NULL,
	cantidad varchar(255) NULL,
	serie1 varchar(255) NULL,
	numero1 varchar(255) NULL
)
;

CREATE TABLE DOC_SALIDA_ORIGEN ( 
	codigo_documento varchar(255) NOT NULL,
	codigo_personal varchar(255) NULL,
	codigo_fondo varchar(255) NULL,
	codigo_oficina varchar(255) NULL,
	usumod varchar(255) NULL,
	fecmod timestamp NULL
)
;

CREATE TABLE DOCUMENTO ( 
	codigo_documento varchar(255) NOT NULL,
	codigo_tipo varchar(255) NULL,
	naturaleza_documento varchar(255) NULL,
	numero_documento varchar(255) NULL,
	fecha_documento date NULL,
	asunto_documento text NULL,
	folios_documento varchar(255) NULL,
	observa_documento text NULL,
	fecha_registro date NULL,
	hora_registro time NULL,
	ultima_modificacion timestamp NULL,
	estado_documento varchar(255) NULL,
	ultimo_usuario varchar(255) NULL,
	cod_ser varchar(255) NULL,
	nro_guia varchar(255) NULL,
	fec_env date NULL,
	postergado varchar(255) NULL,
	cargo varchar(255) NULL,
	useradmin varchar(255) NULL,
	fecadmin timestamp NULL
)
;

CREATE TABLE documentos_serpost ( 
	codigo_documento varchar(255) NOT NULL,
	fecha_envio date NOT NULL,
	motivo varchar(255) NOT NULL,
	usuario varchar(255) NOT NULL,
	nombre varchar(255) NULL
)
;

CREATE TABLE dtarifaspais ( 
	cod_ser varchar(255) NOT NULL,
	secuencia varchar(255) NOT NULL,
	item varchar(255) NOT NULL,
	codigo_pais varchar(255) NOT NULL,
	rangoini numeric(8,3) NOT NULL,
	rangofin numeric(8,3) NOT NULL,
	costofijo numeric(8,3) NOT NULL,
	costounidad numeric(8,3) NULL
)
;

CREATE TABLE EXPEDIENTE ( 
	codigo_expediente varchar(255) NOT NULL,
	codigo_fondo varchar(255) NOT NULL,
	codigo_oficina varchar(255) NOT NULL,
	codigo_serie varchar(255) NOT NULL,
	descripcion_expediente varchar(80) NULL,
	fecha_expediente date NULL,
	observa_expediente text NULL,
	estado_expediente varchar(255) NULL,
	fecha_transferencia date NULL
)
;

CREATE TABLE FONDO ( 
	codigo_fondo varchar(255) NOT NULL,
	descripcion_fondo varchar(80) NOT NULL,
	flag_actual varchar(255) NULL
)
;

CREATE TABLE GRUPO ( 
	codigo_grupo varchar(255) NOT NULL,
	descripcion_grupo varchar(25) NOT NULL
)
;

CREATE TABLE hist_parte_diario ( 
	correlativo varchar(6) NOT NULL,
	codigo_documento varchar(10) NULL,
	sec_documento varchar(255) NULL,
	fecha_envio date NULL,
	costo numeric(8,3) NULL,
	igv numeric(8,3) NULL,
	peso numeric(8,3) NULL,
	fecha_proceso date NULL,
	usuario_proceso varchar(255) NULL,
	nro_guia varchar(255) NULL,
	tipo_envio varchar(255) NULL,
	cantidad varchar(255) NULL,
	serie_olva varchar(255) NULL,
	numero_olva varchar(255) NULL,
	hora_proceso varchar(255) NULL,
	codigo_contacto varchar(255) NULL,
	codigo_institucion varchar(255) NULL,
	cod_ser varchar(255) NULL,
	secuencia varchar(255) NULL,
	item varchar(255) NULL,
	codigo_pais varchar(255) NULL
)
;

CREATE TABLE INSTITUCION ( 
	codigo_institucion varchar(255) NOT NULL,
	descripcion_institucion varchar(80) NOT NULL,
	siglas_institucion varchar(25) NULL,
	direccion_institucion varchar(80) NULL,
	Codigo_Pais varchar(255) NULL,
	cod_dpto varchar(255) NULL,
	cod_prov varchar(255) NULL,
	cod_dist varchar(255) NULL,
	codigo_grupo varchar(255) NULL,
	usumod varchar(255) NULL,
	fecmod timestamp NULL
)
;

CREATE TABLE institucion_dump ( 
	codigo_institucion varchar(255) NOT NULL,
	descripcion_institucion varchar(80) NULL,
	siglas_institucion varchar(25) NULL,
	direccion_institucion varchar(80) NULL,
	codigo_pais varchar(255) NULL,
	cod_dpto varchar(255) NULL,
	cod_prov varchar(255) NULL,
	cod_dist varchar(255) NULL,
	codigo_grupo varchar(255) NULL,
	usumod varchar(255) NULL,
	fecmod timestamp NULL
)
;

CREATE TABLE MOTIVO ( 
	codigo_motivo varchar(255) NOT NULL,
	descripcion_motivo varchar(80) NOT NULL
)
;

CREATE TABLE motivos_serpost ( 
	codigo varchar(255) NOT NULL,
	nombre varchar(100) NOT NULL
)
;

CREATE TABLE MOVIMIENTOS_DOC ( 
	codigo_documento varchar(255) NOT NULL,
	codigo_fondo varchar(255) NULL,
	secuencia_movimiento varchar(255) NOT NULL,
	codigo_institucion varchar(255) NULL,
	codigo_oficina varchar(255) NULL,
	codigo_serie varchar(255) NULL,
	codigo_motivo varchar(255) NULL,
	codigo_expediente varchar(255) NULL,
	fecha_movimiento date NULL,
	observa_movimiento text NULL,
	doc_deriva varchar(255) NULL,
	codigo_inicia varchar(255) NULL,
	estado_movimiento varchar(255) NULL,
	hora_movimiento time NULL,
	ultimo_usuario varchar(255) NULL,
	fondo_deriva varchar(255) NULL,
	oficina_deriva varchar(255) NULL,
	useradmin varchar(255) NULL,
	fecadmin timestamp NULL,
	Abogadesignado varchar(255) NULL,
	Flag_AtenAbogado varchar(255) NULL,
	Flag_LugarAbogado varchar(255) NULL
)
;

CREATE TABLE OFICINAS ( 
	codigo_oficina varchar(255) NOT NULL,
	codigo_fondo varchar(255) NOT NULL,
	nombre_corto varchar(255) NULL,
	fondo varchar(255) NULL,
	oficina varchar(255) NULL,
	descripcion_oficina varchar(100) NOT NULL,
	siglas_oficina varchar(20) NULL,
	doc_entrada varchar(255) NULL,
	doc_salida varchar(255) NULL,
	doc_interno varchar(255) NULL,
	es_activo varchar(255) NULL,
	modalidad_salida varchar(255) NULL,
	nivel varchar(255) NULL,
	cod_dpto varchar(255) NULL,
	cod_prov varchar(255) NULL,
	cod_dist varchar(255) NULL
)
;

CREATE TABLE Pais ( 
	Codigo_Pais varchar(255) NOT NULL,
	Descripcion_Pais varchar(50) NOT NULL
)
;

CREATE TABLE pbcatcol ( 
	pbc_tnam varchar(255) NOT NULL,
	pbc_tid integer NULL,
	pbc_ownr varchar(255) NOT NULL,
	pbc_cnam varchar(255) NOT NULL,
	pbc_cid smallint NULL,
	pbc_labl varchar(255) NULL,
	pbc_lpos smallint NULL,
	pbc_hdr varchar(255) NULL,
	pbc_hpos smallint NULL,
	pbc_jtfy smallint NULL,
	pbc_mask varchar(255) NULL,
	pbc_case smallint NULL,
	pbc_hght smallint NULL,
	pbc_wdth smallint NULL,
	pbc_ptrn varchar(255) NULL,
	pbc_bmap varchar(255) NULL,
	pbc_init varchar(255) NULL,
	pbc_cmnt varchar(255) NULL,
	pbc_edit varchar(255) NULL,
	pbc_tag varchar(255) NULL
)
;

CREATE TABLE pbcatedt ( 
	pbe_name varchar(255) NOT NULL,
	pbe_edit varchar(255) NULL,
	pbe_type smallint NULL,
	pbe_cntr integer NULL,
	pbe_seqn smallint NOT NULL,
	pbe_flag integer NULL,
	pbe_work varchar(255) NULL
)
;

CREATE TABLE pbcatfmt ( 
	pbf_name varchar(255) NOT NULL,
	pbf_frmt varchar(255) NULL,
	pbf_type smallint NULL,
	pbf_cntr integer NULL
)
;

CREATE TABLE pbcattbl ( 
	pbt_tnam varchar(255) NOT NULL,
	pbt_tid integer NULL,
	pbt_ownr varchar(255) NOT NULL,
	pbd_fhgt smallint NULL,
	pbd_fwgt smallint NULL,
	pbd_fitl varchar(255) NULL,
	pbd_funl varchar(255) NULL,
	pbd_fchr smallint NULL,
	pbd_fptc smallint NULL,
	pbd_ffce varchar(255) NULL,
	pbh_fhgt smallint NULL,
	pbh_fwgt smallint NULL,
	pbh_fitl varchar(255) NULL,
	pbh_funl varchar(255) NULL,
	pbh_fchr smallint NULL,
	pbh_fptc smallint NULL,
	pbh_ffce varchar(255) NULL,
	pbl_fhgt smallint NULL,
	pbl_fwgt smallint NULL,
	pbl_fitl varchar(255) NULL,
	pbl_funl varchar(255) NULL,
	pbl_fchr smallint NULL,
	pbl_fptc smallint NULL,
	pbl_ffce varchar(255) NULL,
	pbt_cmnt varchar(255) NULL
)
;

CREATE TABLE pbcatvld ( 
	pbv_name varchar(255) NOT NULL,
	pbv_vald varchar(255) NULL,
	pbv_type smallint NULL,
	pbv_cntr integer NULL,
	pbv_msg varchar(255) NULL
)
;

CREATE TABLE PERSONAL ( 
	codigo_personal varchar(255) NOT NULL,
	codigo_fondo varchar(255) NULL,
	nombre_personal varchar(80) NOT NULL,
	cargo_personal varchar(80) NULL,
	c_usuario varchar(255) NULL,
	grado_personal varchar(80) NULL,
	es_usuario varchar(255) NULL,
	codigo_oficina varchar(255) NULL,
	es_responsable varchar(255) NULL
)
;

CREATE TABLE PROVINCIA ( 
	cod_dpto varchar(255) NOT NULL,
	cod_prov varchar(255) NOT NULL,
	des_prov varchar(255) NOT NULL
)
;

CREATE TABLE r_seg_informacion ( 
	codigo_personal varchar(255) NOT NULL,
	Codigo_Menu varchar(255) NOT NULL
)
;

CREATE TABLE RowGenerator ( 
	row_num smallint NOT NULL
)
;

CREATE TABLE SERIE_DOCUMENTAL ( 
	codigo_oficina varchar(255) NOT NULL,
	codigo_fondo varchar(255) NOT NULL,
	codigo_serie varchar(255) NOT NULL,
	oficina varchar(255) NULL,
	descripcion_serie varchar(80) NULL,
	fondo varchar(255) NULL,
	serie varchar(255) NULL,
	orden varchar(255) NULL,
	valor varchar(255) NULL,
	ag_reten integer NULL,
	ac_reten integer NULL,
	nivel varchar(255) NULL,
	ap_reten integer NULL
)
;

CREATE TABLE serie_externa ( 
	serie varchar(255) NOT NULL,
	numero varchar(255) NOT NULL
)
;

CREATE TABLE t_correlativo ( 
	CodCorr varchar(255) NOT NULL,
	DesCorr varchar(255) NOT NULL,
	LonCorr numeric(2) NOT NULL,
	Numcorr numeric(5) NOT NULL,
	fechor timestamp NULL,
	usuario varchar(255) NULL
)
;

CREATE TABLE t_seg_menu ( 
	Codigo_Menu varchar(255) NOT NULL,
	Descripcion_Menu varchar(255) NULL
)
;


--  Create Primary Key Constraints 
ALTER TABLE Archivo ADD CONSTRAINT PK_Archivo 
	PRIMARY KEY (numero_ingreso)
;


ALTER TABLE archivo_serpost ADD CONSTRAINT PK_archivo_serpost 
	PRIMARY KEY (nombre)
;


ALTER TABLE CONTACTOS ADD CONSTRAINT PK_CONTACTOS 
	PRIMARY KEY (codigo_contacto)
;


ALTER TABLE CORRELATIVOS ADD CONSTRAINT PK_CORRELATIVOS 
	PRIMARY KEY (codigo_oficina, codigo_fondo, codigo_tipo)
;


ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT PK_DCAJ_mDocDetalle 
	PRIMARY KEY (Codigo_Documento)
;


ALTER TABLE DCAJ_mExpQueja ADD CONSTRAINT PK_DCAJ_mExpQueja 
	PRIMARY KEY (Cod_Expediente, Cod_LugarQueja, AbogaDesignado)
;


ALTER TABLE DCAJ_mquejado ADD CONSTRAINT PK_DCAJ_mquejado 
	PRIMARY KEY (Codigo_Documento, Secuencia_Documento)
;


ALTER TABLE DCAJ_mSegQueja ADD CONSTRAINT PK_DCAJ_mSegQueja 
	PRIMARY KEY (Codigo_Documento, Secuencia_Seguimiento)
;


ALTER TABLE DCAJ_tCatalogo ADD CONSTRAINT PK_DCAJ_tCatalogo 
	PRIMARY KEY (Cod_Catal, Tipo_Catal)
;


ALTER TABLE dcostos ADD CONSTRAINT PK_dcostos 
	PRIMARY KEY (cod_ser, secuencia, item)
;


ALTER TABLE DEPARTAMENTO ADD CONSTRAINT PK_DEPARTAMENTO 
	PRIMARY KEY (cod_dpto)
;


ALTER TABLE DISTRITO ADD CONSTRAINT PK_DISTRITO 
	PRIMARY KEY (cod_dpto, cod_prov, cod_dist)
;


ALTER TABLE DNJ_mDependenciaJudicial ADD CONSTRAINT PK_DNJ_mDependenciaJudicial 
	PRIMARY KEY (Cod_DepJud)
;


ALTER TABLE DNJ_tDistritoJudicial ADD CONSTRAINT PK_DNJ_tDistritoJudicial 
	PRIMARY KEY (Cod_DistritoJudicial)
;


ALTER TABLE DNJ_tDoc_Id ADD CONSTRAINT PK_DNJ_tDoc_Id 
	PRIMARY KEY (Tipo_Doc)
;


ALTER TABLE DNJ_tTipo_DepJud ADD CONSTRAINT PK_DNJ_tTipo_DepJud 
	PRIMARY KEY (Cod_TipoDepJud)
;


ALTER TABLE DNJ_tusuario ADD CONSTRAINT PK_DNJ_tusuario 
	PRIMARY KEY (AbogaLogon)
;


ALTER TABLE DOC_ENTRADA ADD CONSTRAINT PK_DOC_ENTRADA 
	PRIMARY KEY (codigo_documento)
;


ALTER TABLE DOC_INTERNO_DESTINO ADD CONSTRAINT PK_DOC_INTERNO_DESTINO 
	PRIMARY KEY (codigo_documento, secuencia_documento)
;


ALTER TABLE DOC_INTERNO_ORIGEN ADD CONSTRAINT PK_DOC_INTERNO_ORIGEN 
	PRIMARY KEY (codigo_documento)
;


ALTER TABLE DOC_SALIDA_DESTINO ADD CONSTRAINT PK_DOC_SALIDA_DESTINO 
	PRIMARY KEY (codigo_documento, secuencia_documento)
;


ALTER TABLE DOC_SALIDA_ORIGEN ADD CONSTRAINT PK_DOC_SALIDA_ORIGEN 
	PRIMARY KEY (codigo_documento)
;


ALTER TABLE DOCUMENTO ADD CONSTRAINT PK_DOCUMENTO 
	PRIMARY KEY (codigo_documento)
;


ALTER TABLE documentos_serpost ADD CONSTRAINT PK_documentos_serpost 
	PRIMARY KEY (codigo_documento)
;


ALTER TABLE dtarifaspais ADD CONSTRAINT PK_dtarifaspais 
	PRIMARY KEY (cod_ser, secuencia, item, codigo_pais)
;


ALTER TABLE EXPEDIENTE ADD CONSTRAINT PK_EXPEDIENTE 
	PRIMARY KEY (codigo_expediente, codigo_fondo, codigo_oficina, codigo_serie)
;


ALTER TABLE FONDO ADD CONSTRAINT PK_FONDO 
	PRIMARY KEY (codigo_fondo)
;


ALTER TABLE GRUPO ADD CONSTRAINT PK_GRUPO 
	PRIMARY KEY (codigo_grupo)
;


ALTER TABLE hist_parte_diario ADD CONSTRAINT PK_hist_parte_diario 
	PRIMARY KEY (correlativo)
;


ALTER TABLE INSTITUCION ADD CONSTRAINT PK_INSTITUCION 
	PRIMARY KEY (codigo_institucion)
;


ALTER TABLE institucion_dump ADD CONSTRAINT PK_institucion_dump 
	PRIMARY KEY (codigo_institucion)
;


ALTER TABLE MOTIVO ADD CONSTRAINT PK_MOTIVO 
	PRIMARY KEY (codigo_motivo)
;


ALTER TABLE motivos_serpost ADD CONSTRAINT PK_motivos_serpost 
	PRIMARY KEY (codigo)
;


ALTER TABLE MOVIMIENTOS_DOC ADD CONSTRAINT PK_MOVIMIENTOS_DOC 
	PRIMARY KEY (codigo_documento, secuencia_movimiento)
;


ALTER TABLE OFICINAS ADD CONSTRAINT PK_OFICINAS 
	PRIMARY KEY (codigo_oficina, codigo_fondo)
;


ALTER TABLE Pais ADD CONSTRAINT PK_Pais 
	PRIMARY KEY (Codigo_Pais)
;


ALTER TABLE PERSONAL ADD CONSTRAINT PK_PERSONAL 
	PRIMARY KEY (codigo_personal)
;


ALTER TABLE PROVINCIA ADD CONSTRAINT PK_PROVINCIA 
	PRIMARY KEY (cod_dpto, cod_prov)
;


ALTER TABLE r_seg_informacion ADD CONSTRAINT PK_r_seg_informacion 
	PRIMARY KEY (codigo_personal, Codigo_Menu)
;


ALTER TABLE RowGenerator ADD CONSTRAINT PK_RowGenerator 
	PRIMARY KEY (row_num)
;


ALTER TABLE SERIE_DOCUMENTAL ADD CONSTRAINT PK_SERIE_DOCUMENTAL 
	PRIMARY KEY (codigo_oficina, codigo_fondo, codigo_serie)
;


ALTER TABLE serie_externa ADD CONSTRAINT PK_serie_externa 
	PRIMARY KEY (serie)
;


ALTER TABLE t_correlativo ADD CONSTRAINT PK_t_correlativo 
	PRIMARY KEY (CodCorr)
;


ALTER TABLE t_seg_menu ADD CONSTRAINT PK_t_seg_menu 
	PRIMARY KEY (Codigo_Menu)
;



--  Create Indexes 
CREATE INDEX idx_instituciones
ON INSTITUCION (descripcion_institucion)
;
CREATE UNIQUE INDEX pbcatc_x
ON pbcatcol (pbc_tnam, pbc_ownr, pbc_cnam)
;
CREATE UNIQUE INDEX pbcate_x
ON pbcatedt (pbe_name, pbe_seqn)
;
CREATE UNIQUE INDEX pbcatf_x
ON pbcatfmt (pbf_name)
;
CREATE UNIQUE INDEX pbcatt_x
ON pbcattbl (pbt_tnam, pbt_ownr)
;
CREATE UNIQUE INDEX pbcatv_x
ON pbcatvld (pbv_name)
;

--  Create Foreign Key Constraints 
ALTER TABLE Archivo ADD CONSTRAINT Tranferencias 
	FOREIGN KEY (codigo_trans) REFERENCES Tranferencias (codigo_trans)
;

ALTER TABLE Archivo ADD CONSTRAINT Unidad_Archivamiento 
	FOREIGN KEY (Tipo_unidad) REFERENCES Unidad_Archivamiento (Tipo_unidad)
;

ALTER TABLE CONTACTOS ADD CONSTRAINT DISTRITO 
	FOREIGN KEY (cod_dist, cod_dpto, cod_prov) REFERENCES DISTRITO (cod_dpto, cod_prov, cod_dist)
;

ALTER TABLE CONTACTOS ADD CONSTRAINT Pais 
	FOREIGN KEY (Codigo_Pais) REFERENCES Pais (Codigo_Pais)
;

ALTER TABLE CORRELATIVOS ADD CONSTRAINT codigofondo 
	FOREIGN KEY (codigo_fondo) REFERENCES FONDO (codigo_fondo)
ON UPDATE CASCADE
;

ALTER TABLE CORRELATIVOS ADD CONSTRAINT codigotipo 
	FOREIGN KEY (codigo_tipo) REFERENCES TIPO_DOCUMENTO (codigo_tipo)
ON UPDATE CASCADE
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT DCAJ_mExpQueja 
	FOREIGN KEY (AbogaDesignado, Cod_Expediente, Cod_LugarQueja) REFERENCES DCAJ_mExpQueja (Cod_Expediente, Cod_LugarQueja, AbogaDesignado)
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT DCAJ_tCatalogo001 
	FOREIGN KEY (Cod_Catal_DocAtendido, Tipo_Catal_DocAtendido) REFERENCES DCAJ_tCatalogo (Cod_Catal, Tipo_Catal)
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT DCAJ_tCatalogo 
	FOREIGN KEY (Cod_Catal_NivImport, Tipo_Catal_NivImport) REFERENCES DCAJ_tCatalogo (Cod_Catal, Tipo_Catal)
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT DCAJ_tCatalogo002 
	FOREIGN KEY (Cod_Catal_Tipotra, Tipo_Catal_Tipotra) REFERENCES DCAJ_tCatalogo (Cod_Catal, Tipo_Catal)
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT DISTRITO 
	FOREIGN KEY (cod_dist, cod_dpto, cod_prov) REFERENCES DISTRITO (cod_dpto, cod_prov, cod_dist)
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT CONTACTOS 
	FOREIGN KEY (codigo_contacto) REFERENCES CONTACTOS (codigo_contacto)
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT OFICINAS 
	FOREIGN KEY (codigo_fondo, codigo_oficina) REFERENCES OFICINAS (codigo_oficina, codigo_fondo)
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT Pais 
	FOREIGN KEY (Codigo_Pais) REFERENCES Pais (Codigo_Pais)
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT PERSONAL 
	FOREIGN KEY (codigo_personal) REFERENCES PERSONAL (codigo_personal)
;

ALTER TABLE DCAJ_mDocDetalle ADD CONSTRAINT DNJ_tDoc_Id 
	FOREIGN KEY (Tipo_Doc) REFERENCES DNJ_tDoc_Id (Tipo_Doc)
;

ALTER TABLE DCAJ_mExpQueja ADD CONSTRAINT DNJ_mDependenciaJudicial 
	FOREIGN KEY (Cod_DepJud) REFERENCES DNJ_mDependenciaJudicial (Cod_DepJud)
;

ALTER TABLE DCAJ_mquejado ADD CONSTRAINT DCAJ_tCatalogo 
	FOREIGN KEY (Cod_Catal_Cargo, Tipo_Catal_Cargo) REFERENCES DCAJ_tCatalogo (Cod_Catal, Tipo_Catal)
;

ALTER TABLE DCAJ_mquejado ADD CONSTRAINT CONTACTOS 
	FOREIGN KEY (codigo_contacto) REFERENCES CONTACTOS (codigo_contacto)
;

ALTER TABLE DCAJ_mquejado ADD CONSTRAINT DCAJ_mDocDetalle 
	FOREIGN KEY (Codigo_Documento) REFERENCES DCAJ_mDocDetalle (Codigo_Documento)
;

ALTER TABLE DCAJ_mSegQueja ADD CONSTRAINT DCAJ_mDocDetalle 
	FOREIGN KEY (Codigo_Documento) REFERENCES DCAJ_mDocDetalle (Codigo_Documento)
;

ALTER TABLE DCAJ_mSegQueja ADD CONSTRAINT OFICINAS 
	FOREIGN KEY (codigo_fondo, codigo_oficina) REFERENCES OFICINAS (codigo_oficina, codigo_fondo)
;

ALTER TABLE DCAJ_mSegQueja ADD CONSTRAINT PERSONAL 
	FOREIGN KEY (codigo_personal) REFERENCES PERSONAL (codigo_personal)
;

ALTER TABLE DCAJ_mSegQueja ADD CONSTRAINT TIPO_DOCUMENTO 
	FOREIGN KEY (codigo_tipo) REFERENCES TIPO_DOCUMENTO (codigo_tipo)
;

ALTER TABLE DISTRITO ADD CONSTRAINT PROVINCIA 
	FOREIGN KEY (cod_dpto, cod_prov) REFERENCES PROVINCIA (cod_dpto, cod_prov)
;

ALTER TABLE DNJ_mDependenciaJudicial ADD CONSTRAINT DNJ_tDistritoJudicial 
	FOREIGN KEY (Cod_DistritoJudicial) REFERENCES DNJ_tDistritoJudicial (Cod_DistritoJudicial)
;

ALTER TABLE DNJ_mDependenciaJudicial ADD CONSTRAINT DNJ_tTipo_DepJud 
	FOREIGN KEY (Cod_TipoDepJud) REFERENCES DNJ_tTipo_DepJud (Cod_TipoDepJud)
;

ALTER TABLE DOC_ENTRADA ADD CONSTRAINT PERSONAL 
	FOREIGN KEY (destinatario) REFERENCES PERSONAL (codigo_personal)
;

ALTER TABLE DOC_ENTRADA ADD CONSTRAINT OFICINAS 
	FOREIGN KEY (destino_documento, fondo_destino) REFERENCES OFICINAS (codigo_oficina, codigo_fondo)
;

ALTER TABLE DOC_INTERNO_DESTINO ADD CONSTRAINT PERSONAL 
	FOREIGN KEY (codigo_personal) REFERENCES PERSONAL (codigo_personal)
;

ALTER TABLE DOC_INTERNO_ORIGEN ADD CONSTRAINT PERSONAL 
	FOREIGN KEY (codigo_personal) REFERENCES PERSONAL (codigo_personal)
;

ALTER TABLE DOC_SALIDA_DESTINO ADD CONSTRAINT tCostos 
	FOREIGN KEY (cod_ser, secuencia) REFERENCES tCostos (cod_ser, secuencia)
;

ALTER TABLE DOC_SALIDA_DESTINO ADD CONSTRAINT CONTACTOS 
	FOREIGN KEY (codigo_contacto) REFERENCES CONTACTOS (codigo_contacto)
;

ALTER TABLE DOC_SALIDA_DESTINO ADD CONSTRAINT tipo_envio 
	FOREIGN KEY (tipo_envio) REFERENCES tipo_envio (tipo_envio)
;

ALTER TABLE DOC_SALIDA_ORIGEN ADD CONSTRAINT PERSONAL 
	FOREIGN KEY (codigo_personal) REFERENCES PERSONAL (codigo_personal)
;

ALTER TABLE INSTITUCION ADD CONSTRAINT DISTRITO 
	FOREIGN KEY (cod_dist, cod_dpto, cod_prov) REFERENCES DISTRITO (cod_dpto, cod_prov, cod_dist)
ON UPDATE CASCADE
;

ALTER TABLE INSTITUCION ADD CONSTRAINT GRUPO 
	FOREIGN KEY (codigo_grupo) REFERENCES GRUPO (codigo_grupo)
ON UPDATE CASCADE
;

ALTER TABLE INSTITUCION ADD CONSTRAINT Pais 
	FOREIGN KEY (Codigo_Pais) REFERENCES Pais (Codigo_Pais)
ON UPDATE CASCADE
;

ALTER TABLE INSTITUCION ADD CONSTRAINT codigopais 
	FOREIGN KEY (Codigo_Pais) REFERENCES Pais (Codigo_Pais)
ON UPDATE CASCADE
;

ALTER TABLE institucion_dump ADD CONSTRAINT DISTRITO 
	FOREIGN KEY (cod_dist, cod_dpto, cod_prov) REFERENCES DISTRITO (cod_dpto, cod_prov, cod_dist)
;

ALTER TABLE institucion_dump ADD CONSTRAINT GRUPO 
	FOREIGN KEY (codigo_grupo) REFERENCES GRUPO (codigo_grupo)
;

ALTER TABLE institucion_dump ADD CONSTRAINT Pais 
	FOREIGN KEY (codigo_pais) REFERENCES Pais (Codigo_Pais)
;

ALTER TABLE PROVINCIA ADD CONSTRAINT DEPARTAMENTO 
	FOREIGN KEY (cod_dpto) REFERENCES DEPARTAMENTO (cod_dpto)
;

ALTER TABLE r_seg_informacion ADD CONSTRAINT t_seg_menu 
	FOREIGN KEY (Codigo_Menu) REFERENCES t_seg_menu (Codigo_Menu)
;

ALTER TABLE SERIE_DOCUMENTAL ADD CONSTRAINT OFICINAS 
	FOREIGN KEY (codigo_fondo, codigo_oficina) REFERENCES OFICINAS (codigo_oficina, codigo_fondo)
ON UPDATE CASCADE
;

ALTER TABLE SERIE_DOCUMENTAL ADD CONSTRAINT SERIE_DOCUMENTAL 
	FOREIGN KEY (fondo, oficina, serie) REFERENCES SERIE_DOCUMENTAL (codigo_oficina, codigo_fondo, codigo_serie)
ON UPDATE CASCADE
;



--  Create Stored Procedures 
create procedure
"dba".sp_cargos_internos(in OFI char(4),in FON char(2),in FECHA date,in COD1 char(10),in COD2 char(10))
/*result(li_tot integer)alter procedure "dba".sp_cargos_internos(out OFI char,out FON char,out FECHA date,out COD1 char,out COD2 char)
result(codigo_documento char,numero_documento char,descripcion_tipo char,asunto_documento char,codigo_oficina char,motivo char,fecha_mov date)*/
begin
  declare LI_TOT integer;
  declare ls_minimo char(2);
  /*declare ls_secuencia char(2);*/
  drop table temp_rep_ci;
  /*  if sqlcode is -141 then
  continue
  end if   */
  create global temporary table "dba".temp_rep_ci(
    codigo_documento char(12) not null,
    secuencia char(4) not null,
    estado char(2) null,
    numero_documento char(10) null,
    descripcion_tipo char(100) null,
    asunto_documento long varchar null,
    fecha_documento date null,
    naturaleza_documento char(2) null,
    estado_mov char(2) null,
    codigo_oficina char(6) null,
    motivo char(3) null,
    fecha_mov date null,
    primary key(codigo_documento,secuencia),
    ) on commit preserve rows;
  DOCUMENTOSLOOP: for DOCUMENTOSFOR as CR_DOCUMENTOS dynamic scroll cursor for
    select codigo_documento as ls_documento,
      secuencia_movimiento as ls_secuencia,
      ultimo_usuario as ls_usuario,
      estado_movimiento as ls_estado
      from MOVIMIENTOS_DOC
      where CODIGO_FONDO=FON and CODIGO_OFICINA=OFI
      and(ESTADO_MOVIMIENTO='5' or ESTADO_MOVIMIENTO='1')
      and FECHA_MOVimiento=FECHA and CODIGO_DOCUMENTO>=COD1 and CODIGO_DOCUMENTO<=COD2 do
    /* para evitar que se produzca duplicidad */
    select min(secuencia_movimiento) into ls_minimo
      from MOVIMIENTOS_DOC
      where CODIGO_FONDO=FON and CODIGO_OFICINA=OFI
      and(ESTADO_MOVIMIENTO='5' or ESTADO_MOVIMIENTO='1')
      and FECHA_MOVimiento=FECHA and CODIGO_DOCUMENTO>=COD1 and CODIGO_DOCUMENTO<=COD2
      and codigo_documento=ls_documento;
    /* ---*/
    if ls_minimo=ls_secuencia then
      /* para evitar que inserte nulos */
      select "count"(*) into li_tot
        from movimientos_doc as A
        where A.codigo_documento=ls_documento
        and a.secuencia_MOVIMIENTO>ls_secuencia and a.ultimo_usuario=ls_usuario
        and a.codigo_fondo=fon;
      /*----*/
      if li_tot>0 then
        insert into temp_rep_ci(codigo_documento,secuencia,estado,
          numero_documento,descripcion_tipo,asunto_documento,fecha_documento,
          naturaleza_documento,estado_mov,codigo_oficina,motivo,fecha_mov)
          select a.codigo_documento,a.secuencia_movimiento,ls_estado,
            b.numero_documento,c.descripcion_tipo,b.asunto_documento,b.fecha_documento,
            b.naturaleza_documento,a.estado_movimiento,a.codigo_oficina,a.codigo_motivo,a.fecha_movimiento
            from movimientos_doc as A,documento as B,tipo_documento as C
            where a.codigo_documento=b.codigo_documento
            and b.CODIGO_tipo=c.CODIGO_tipo and b.codigo_documento=ls_documento
            and a.secuencia_MOVIMIENTO>ls_secuencia and a.ultimo_usuario=ls_usuario
            and a.codigo_fondo=fon;
        commit work
      end if
    end if
  end for
end
;

create procedure "dba".sp_cons_deriva(in as_codigo_documento char(10),in as_oficina char(4))
result(codigo_oficina char,codigo_documento char,codigo_institucion char,oficina_deriva char,codigo_fondo char,doc_deriva char,documento_codigo_tipo char,documento_numero_documento char,tipo_documento_descripcion_tipo char)
begin
  select movimientos_doc.codigo_oficina,
    movimientos_doc.codigo_documento,
    movimientos_doc.codigo_institucion,
    movimientos_doc.oficina_deriva,
    movimientos_doc.codigo_fondo,
    movimientos_doc.doc_deriva,
    documento.codigo_tipo,
    documento.numero_documento,
    tipo_documento.descripcion_tipo
    from movimientos_doc
    ,documento
    ,tipo_documento
    where(documento.codigo_documento=movimientos_doc.codigo_documento)
    and(tipo_documento.codigo_tipo=documento.codigo_tipo)
    and(movimientos_doc.codigo_documento=as_codigo_documento
    or(movimientos_doc.doc_deriva=as_codigo_documento
    and movimientos_doc.estado_movimiento<>'1'))
    and movimientos_doc.oficina_deriva=as_oficina
end
;

create procedure dba.sp_consulta_anidados(in @as_oficina char(4),in @as_fondo char(2),in @ad_fecha_ini date,in @ad_fecha_fin date,in @as_tipo_documento char(2),in @as_estado char(1),in @as_naturaleza char(1))
result(codigo_documento char(10),descripcion_oficina varchar(100),descripcion_tipo varchar(80),numero_documento char(6),naturaleza_documento char(1),fecha_documento date,codigo_oficina char(4),codigo_institucion char(6),descripcion_institucion varchar(80),siglas_institucion varchar(25),siglas_oficina varchar(20),fecha_movimiento date,hora_movimiento time,estado_movimiento char(1),descripcion_motivo varchar(80),asunto_documento long varchar,folios_documento char(4),observa_documento long varchar,descripcion_serie varchar(80),descripcion_expediente varchar(80),fecha_registro date,hora_registro time,ultima_modificacion timestamp,codigo_inicia char(10),secuencia_movimiento char(2),ultimo_usuario char(8),nombre_personal varchar(80),nombre_contacto varchar(80),es_multiple char(1),doc_deriva char(10),observa_movimiento long varchar,codigo_motivo char(2),fondo_deriva char(2),oficina_deriva char(4),codigo_tipo char(2)) begin select movimientos_doc.codigo_documento,oficinas_a.descripcion_oficina,oficinas_b.descripcion_oficina,tipo_documento.descripcion_tipo,documento.numero_documento,documento.naturaleza_documento,documento.fecha_documento,doc_salida_origen.codigo_oficina,doc_salida_destino.codigo_institucion,institucion_a.descripcion_institucion,oficinas_c.descripcion_oficina,institucion_b.descripcion_institucion,oficinas_d.descripcion_oficina,institucion_b.siglas_institucion,oficinas_c.siglas_oficina,oficinas_b.siglas_oficina,movimientos_doc.fecha_movimiento,movimientos_doc.hora_movimiento,movimientos_doc.estado_movimiento,motivo.descripcion_motivo,documento.asunto_documento,documento.folios_documento,documento.observa_documento,serie_documental.descripcion_serie,expediente.descripcion_expediente,documento.fecha_registro,documento.hora_registro,documento.ultima_modificacion,movimientos_doc.codigo_inicia,movimientos_doc.secuencia_movimiento,doc_interno_origen.codigo_oficina,movimientos_doc.ultimo_usuario,personal_a.nombre_personal,personal_b.nombre_personal,personal_c.nombre_personal,contactos_a.nombre_contacto,contactos_b.nombre_contacto,personal_d.nombre_personal,tipo_documento.es_multiple,movimientos_doc.doc_deriva,movimientos_doc.observa_movimiento,movimientos_doc.codigo_motivo,movimientos_doc.fondo_deriva,movimientos_doc.oficina_deriva,documento.codigo_tipo,movimientos_doc.codigo_institucion,movimientos_doc.codigo_oficina from doc_salida_destino left outer join institucion as institucion_a on doc_salida_destino.codigo_institucion = institucion_a.codigo_institucion,documento left outer join doc_salida_origen on documento.codigo_documento = doc_salida_origen.codigo_documento,documento left outer join doc_salida_destino on documento.codigo_documento = doc_salida_destino.codigo_documento,documento left outer join doc_interno_destino on documento.codigo_documento = doc_interno_destino.codigo_documento,documento left outer join doc_interno_origen on documento.codigo_documento = doc_interno_origen.codigo_documento,doc_entrada left outer join institucion as institucion_b on doc_entrada.origen_documento = institucion_b.codigo_institucion,documento left outer join doc_entrada on documento.codigo_documento = doc_entrada.codigo_documento,movimientos_doc left outer join motivo on movimientos_doc.codigo_motivo = motivo.codigo_motivo,movimientos_doc left outer join expediente on movimientos_doc.codigo_expediente = expediente.codigo_expediente and movimientos_doc.codigo_fondo = expediente.codigo_fondo and movimientos_doc.codigo_oficina = expediente.codigo_oficina and movimientos_doc.codigo_serie = expediente.codigo_serie,movimientos_doc left outer join serie_documental on movimientos_doc.codigo_fondo = serie_documental.codigo_fondo and movimientos_doc.codigo_oficina = serie_documental.codigo_oficina and movimientos_doc.codigo_serie = serie_documental.codigo_serie,doc_interno_origen left outer join personal as personal_a on doc_interno_origen.codigo_personal = personal_a.codigo_personal,doc_interno_destino left outer join personal as personal_b on doc_interno_destino.codigo_personal = personal_b.codigo_personal,doc_salida_origen left outer join personal as personal_c on doc_salida_origen.codigo_personal = personal_c.codigo_personal,doc_salida_destino left outer join contactos as contactos_a on doc_salida_destino.codigo_contacto = contactos_a.codigo_contacto,doc_entrada left outer join contactos as contactos_b on doc_entrada.remitente = contactos_b.codigo_contacto,doc_entrada left outer join personal as personal_d on doc_entrada.destinatario = personal_d.codigo_personal,doc_interno_destino left outer join oficinas as oficinas_a on doc_interno_destino.codigo_oficina = oficinas_a.codigo_oficina and doc_interno_destino.codigo_fondo = oficinas_a.codigo_fondo,doc_interno_origen left outer join oficinas as oficinas_b on doc_interno_origen.codigo_fondo = oficinas_b.codigo_fondo and doc_interno_origen.codigo_oficina = oficinas_b.codigo_oficina,doc_salida_origen left outer join oficinas as oficinas_c on doc_salida_origen.codigo_oficina = oficinas_c.codigo_oficina and doc_salida_origen.codigo_fondo = oficinas_c.codigo_fondo,doc_entrada left outer join oficinas as oficinas_d on doc_entrada.destino_documento = oficinas_d.codigo_oficina and doc_entrada.fondo_destino = oficinas_d.codigo_fondo,tipo_documento where(documento.codigo_documento = movimientos_doc.codigo_documento) and(tipo_documento.codigo_tipo = documento.codigo_tipo) and((movimientos_doc.codigo_oficina = @as_oficina) and(movimientos_doc.codigo_fondo = @as_fondo) and(movimientos_doc.fecha_movimiento >= @ad_fecha_ini) and(movimientos_doc.fecha_movimiento <= @ad_fecha_fin) and(documento.codigo_tipo like @as_tipo_documento) and(movimientos_doc.estado_movimiento like @as_estado) and(documento.naturaleza_documento like @as_naturaleza)) order by movimientos_doc.fecha_movimiento desc,movimientos_doc.hora_movimiento desc,movimientos_doc.codigo_documento desc,movimientos_doc.secuencia_movimiento desc end
;

create procedure dba.sp_consulta_documentos(in @as_oficina char(4),in @as_fondo char(2),in @ad_fecha_ini date,in @ad_fecha_fin date)
result(codigo_documento char(10),descripcion_oficina varchar(100),descripcion_tipo varchar(80),numero_documento char(6),naturaleza_documento char(1),fecha_documento date,codigo_oficina char(4),descripcion_institucion varchar(80),siglas_institucion varchar(25),siglas_oficina varchar(20),fecha_movimiento date,hora_movimiento time,estado_movimiento char(1),descripcion_motivo varchar(80),asunto_documento long varchar,folios_documento char(4),observa_documento long varchar,descripcion_serie varchar(80),descripcion_expediente varchar(80),fecha_registro date,hora_registro time,ultima_modificacion timestamp,codigo_inicia char(10),secuencia_movimiento char(2),ultimo_usuario char(8),nombre_personal varchar(80),nombre_contacto varchar(80),es_multiple char(1),doc_deriva char(10),observa_movimiento long varchar,codigo_motivo char(2),fondo_deriva char(2),oficina_deriva char(4),codigo_tipo char(2),codigo_institucion char(6)) begin select movimientos_doc.codigo_documento,oficinas_a.descripcion_oficina,oficinas_b.descripcion_oficina,tipo_documento.descripcion_tipo,documento.numero_documento,documento.naturaleza_documento,documento.fecha_documento,doc_salida_origen.codigo_oficina,doc_salida_destino.codigo_institucion,institucion_a.descripcion_institucion,oficinas_c.descripcion_oficina,institucion_b.descripcion_institucion,oficinas_d.descripcion_oficina,institucion_b.siglas_institucion,oficinas_c.siglas_oficina,oficinas_b.siglas_oficina,movimientos_doc.fecha_movimiento,movimientos_doc.hora_movimiento,movimientos_doc.estado_movimiento,motivo.descripcion_motivo,documento.asunto_documento,documento.folios_documento,documento.observa_documento,serie_documental.descripcion_serie,expediente.descripcion_expediente,documento.fecha_registro,documento.hora_registro,documento.ultima_modificacion,movimientos_doc.codigo_inicia,movimientos_doc.secuencia_movimiento,doc_interno_origen.codigo_oficina,movimientos_doc.ultimo_usuario,personal_a.nombre_personal,personal_b.nombre_personal,personal_c.nombre_personal,contactos_a.nombre_contacto,contactos_b.nombre_contacto,personal_d.nombre_personal,tipo_documento.es_multiple,movimientos_doc.doc_deriva,movimientos_doc.observa_movimiento,movimientos_doc.codigo_motivo from doc_salida_destino left outer join institucion as institucion_a on doc_salida_destino.codigo_institucion = institucion_a.codigo_institucion,doc_salida_origen left outer join oficinas as oficinas_c on doc_salida_origen.codigo_oficina = oficinas_c.codigo_oficina and doc_salida_origen.codigo_fondo = oficinas_c.codigo_fondo,documento left outer join doc_salida_origen on documento.codigo_documento = doc_salida_origen.codigo_documento,documento left outer join doc_salida_destino on documento.codigo_documento = doc_salida_destino.codigo_documento,documento left outer join doc_interno_destino on documento.codigo_documento = doc_interno_destino.codigo_documento,documento left outer join doc_interno_origen on documento.codigo_documento = doc_interno_origen.codigo_documento,doc_interno_destino left outer join oficinas as oficinas_a on doc_interno_destino.codigo_oficina = oficinas_a.codigo_oficina and doc_interno_destino.codigo_fondo = oficinas_a.codigo_fondo,doc_interno_origen left outer join oficinas as oficinas_b on doc_interno_origen.codigo_fondo = oficinas_b.codigo_fondo and doc_interno_origen.codigo_oficina = oficinas_b.codigo_oficina,doc_entrada left outer join institucion as institucion_b on doc_entrada.origen_documento = institucion_b.codigo_institucion,documento left outer join doc_entrada on documento.codigo_documento = doc_entrada.codigo_documento left outer join oficinas as oficinas_d on doc_entrada.destino_documento = oficinas_d.codigo_oficina and doc_entrada.fondo_destino = oficinas_d.codigo_fondo,movimientos_doc left outer join motivo on movimientos_doc.codigo_motivo = motivo.codigo_motivo,movimientos_doc left outer join expediente on movimientos_doc.codigo_expediente = expediente.codigo_expediente and movimientos_doc.codigo_fondo = expediente.codigo_fondo and movimientos_doc.codigo_oficina = expediente.codigo_oficina and movimientos_doc.codigo_serie = expediente.codigo_serie,movimientos_doc left outer join serie_documental on movimientos_doc.codigo_fondo = serie_documental.codigo_fondo and movimientos_doc.codigo_oficina = serie_documental.codigo_oficina and movimientos_doc.codigo_serie = serie_documental.codigo_serie,doc_interno_origen left outer join personal as personal_a on doc_interno_origen.codigo_personal = personal_a.codigo_personal,doc_interno_destino left outer join personal as personal_b on doc_interno_destino.codigo_personal = personal_b.codigo_personal,doc_salida_origen left outer join personal as personal_c on doc_salida_origen.codigo_personal = personal_c.codigo_personal,doc_salida_destino left outer join contactos as contactos_a on doc_salida_destino.codigo_contacto = contactos_a.codigo_contacto,doc_entrada left outer join contactos as contactos_b on doc_entrada.remitente = contactos_b.codigo_contacto,doc_entrada left outer join personal as personal_d on doc_entrada.destinatario = personal_d.codigo_personal,tipo_documento where(documento.codigo_documento = movimientos_doc.codigo_documento) and(tipo_documento.codigo_tipo = documento.codigo_tipo) and((movimientos_doc.codigo_oficina like @as_oficina) and(movimientos_doc.codigo_fondo like @as_fondo)) and(movimientos_doc.fecha_movimiento >= @ad_fecha_ini) and(movimientos_doc.fecha_movimiento <= @ad_fecha_fin) order by movimientos_doc.fecha_movimiento desc,movimientos_doc.hora_movimiento desc,movimientos_doc.codigo_documento desc,movimientos_doc.secuencia_movimiento desc end
;

create procedure "DBA".sp_contacto(in @CODIGO_INTITUCION char(6))
result(codigo_institucion char(6),nombre_contacto varchar(80),cargo_contacto varchar(80),grado_contacto varchar(80),codigo_pais char(4),cod_dpto char(2),cod_prov char(2),cod_dist char(2),codigo_contacto char(6),es_responsable char(1))
begin
  select codigo_institucion,
    nombre_contacto,
    cargo_contacto,
    grado_contacto,
    codigo_pais,
    cod_dpto,
    cod_prov,
    cod_dist,
    codigo_contacto,
    es_responsable
    from contactos
    where codigo_institucion=@CODIGO_INTITUCION order by
    codigo_institucion asc,nombre_contacto asc
end
;

create procedure "DBA".sp_crea_tinconsis() /* parameters,... */
/* RESULT ( column-name,... ) */
begin
  drop table tinconsis;
  /*  if sqlcode is -141 then
  continue
  end if   */
  create global temporary table "dba".tinconsis(
    codigo_documento char(12) not null,
    secuencia_documento char(2) not null,
    secuencia_error char(4) not null,
    fecha_proceso date null,
    Mensaje char(200) null,
    primary key(codigo_documento,
    secuencia_documento,secuencia_error),
    ) on commit preserve rows
end
;

create procedure dba.sp_envio_courier(in @as_oficina char(4),in @as_fondo char(2),in @ad_fecha_ini date,in @ad_fecha_fin date)
result(codigo_documento char(10),descripcion_oficina varchar(100),descripcion_tipo varchar(80),numero_documento char(6),naturaleza_documento char(1),fecha_documento date,codigo_oficina char(4),codigo_institucion char(6),descripcion_institucion varchar(80),siglas_institucion varchar(25),siglas_oficina varchar(20),fecha_movimiento date,hora_movimiento time,estado_movimiento char(1),descripcion_motivo varchar(80),asunto_documento long varchar,folios_documento char(4),observa_documento long varchar,descripcion_serie varchar(80),descripcion_expediente varchar(80),fecha_registro date,hora_registro time,ultima_modificacion timestamp,codigo_inicia char(10),secuencia_movimiento char(2),ultimo_usuario char(8),nombre_personal varchar(80),nombre_contacto varchar(80),es_multiple char(1),cod_ser char(2),nro_guia char(8),fec_env date,postergado char(1),cargo char(1),direccion_institucion varchar(80),direccion_contacto varchar(80),descripcion_pais varchar(50),des_dpo char(30),des_prov char(30),des_dist char(30),peso numeric(8,3),peso_courier numeric(8,3),costo numeric(8,3),igv numeric(8,3),cancelado char(1),secuencia_documento char(2),conciliado char(1),costo_courier numeric(8,3),tipo_envio char(2),cantidad char(3)) begin select movimientos_doc.codigo_documento,oficinas_a.descripcion_oficina,oficinas_b.descripcion_oficina,tipo_documento.descripcion_tipo,documento.numero_documento,documento.naturaleza_documento,documento.fecha_documento,doc_salida_origen.codigo_oficina,doc_salida_destino.codigo_institucion,institucion_a.descripcion_institucion,oficinas_c.descripcion_oficina,institucion_b.descripcion_institucion,oficinas_d.descripcion_oficina,institucion_b.siglas_institucion,oficinas_c.siglas_oficina,oficinas_b.siglas_oficina,movimientos_doc.fecha_movimiento,movimientos_doc.hora_movimiento,movimientos_doc.estado_movimiento,motivo.descripcion_motivo,documento.asunto_documento,documento.folios_documento,documento.observa_documento,serie_documental.descripcion_serie,expediente.descripcion_expediente,documento.fecha_registro,documento.hora_registro,documento.ultima_modificacion,movimientos_doc.codigo_inicia,movimientos_doc.secuencia_movimiento,doc_interno_origen.codigo_oficina,movimientos_doc.ultimo_usuario,personal_a.nombre_personal,personal_b.nombre_personal,personal_c.nombre_personal,contactos_a.nombre_contacto,contactos_b.nombre_contacto,personal_d.nombre_personal,tipo_documento.es_multiple,documento.cod_ser,documento.nro_guia,documento.fec_env,documento.postergado,documento.cargo,institucion_a.direccion_institucion,contactos_a.direccion_contacto,pais_a.descripcion_pais,pais_b.descripcion_pais,departamento_a.des_dpo,provincia_a.des_prov,departamento_b.des_dpo,provincia_b.des_prov,distrito_a.des_dist,distrito_b.des_dist,doc_salida_destino.peso,doc_salida_destino.peso_courier,doc_salida_destino.costo,doc_salida_destino.igv,doc_salida_destino.cancelado,doc_salida_destino.secuencia_documento,doc_salida_destino.conciliado,doc_salida_destino.costo_courier,doc_salida_destino.tipo_envio,doc_salida_destino.cantidad from doc_salida_destino left outer join institucion as institucion_a on doc_salida_destino.codigo_institucion = institucion_a.codigo_institucion,documento left outer join doc_interno_destino on documento.codigo_documento = doc_interno_destino.codigo_documento,documento left outer join doc_interno_origen on documento.codigo_documento = doc_interno_origen.codigo_documento,doc_interno_destino left outer join oficinas as oficinas_a on doc_interno_destino.codigo_oficina = oficinas_a.codigo_oficina and doc_interno_destino.codigo_fondo = oficinas_a.codigo_fondo,doc_interno_origen left outer join oficinas as oficinas_b on doc_interno_origen.codigo_fondo = oficinas_b.codigo_fondo and doc_interno_origen.codigo_oficina = oficinas_b.codigo_oficina,doc_entrada left outer join institucion as institucion_b on doc_entrada.origen_documento = institucion_b.codigo_institucion,documento left outer join doc_entrada on documento.codigo_documento = doc_entrada.codigo_documento,movimientos_doc left outer join motivo on movimientos_doc.codigo_motivo = motivo.codigo_motivo,movimientos_doc left outer join expediente on movimientos_doc.codigo_expediente = expediente.codigo_expediente and movimientos_doc.codigo_fondo = expediente.codigo_fondo and movimientos_doc.codigo_oficina = expediente.codigo_oficina and movimientos_doc.codigo_serie = expediente.codigo_serie,movimientos_doc left outer join serie_documental on movimientos_doc.codigo_fondo = serie_documental.codigo_fondo and movimientos_doc.codigo_oficina = serie_documental.codigo_oficina and movimientos_doc.codigo_serie = serie_documental.codigo_serie,doc_interno_origen left outer join personal as personal_a on doc_interno_origen.codigo_personal = personal_a.codigo_personal,doc_interno_destino left outer join personal as personal_b on doc_interno_destino.codigo_personal = personal_b.codigo_personal,doc_salida_origen left outer join personal as personal_c on doc_salida_origen.codigo_personal = personal_c.codigo_personal,doc_salida_destino left outer join contactos as contactos_a on doc_salida_destino.codigo_contacto = contactos_a.codigo_contacto,doc_entrada left outer join contactos as contactos_b on doc_entrada.remitente = contactos_b.codigo_contacto,doc_entrada left outer join personal as personal_d on doc_entrada.destinatario = personal_d.codigo_personal,institucion as institucion_a left outer join pais as pais_a on institucion_a.codigo_pais = pais_a.codigo_pais,contactos as contactos_a left outer join pais as pais_b on contactos_a.codigo_pais = pais_b.codigo_pais,institucion as institucion_a left outer join departamento as departamento_a on institucion_a.cod_dpto = departamento_a.cod_dpto,contactos as contactos_a left outer join departamento as departamento_b on contactos_a.cod_dpto = departamento_b.cod_dpto,institucion as institucion_a left outer join provincia as provincia_a on institucion_a.cod_dpto = provincia_a.cod_dpto and institucion_a.cod_prov = provincia_a.cod_prov,contactos as contactos_a left outer join provincia as provincia_b on contactos_a.cod_dpto = provincia_b.cod_dpto and contactos_a.cod_prov = provincia_b.cod_prov,institucion as institucion_a left outer join distrito as distrito_a on institucion_a.cod_dpto = distrito_a.cod_dpto and institucion_a.cod_prov = distrito_a.cod_prov and institucion_a.cod_dist = distrito_a.cod_dist,contactos as contactos_a left outer join distrito as distrito_b on contactos_a.cod_dpto = distrito_b.cod_dpto and contactos_a.cod_prov = distrito_b.cod_prov and contactos_a.cod_dist = distrito_b.cod_dist,doc_salida_origen left outer join oficinas as oficinas_c on doc_salida_origen.codigo_oficina = oficinas_c.codigo_oficina and doc_salida_origen.codigo_fondo = oficinas_c.codigo_fondo,doc_entrada left outer join oficinas as oficinas_d on doc_entrada.destino_documento = oficinas_d.codigo_oficina and doc_entrada.fondo_destino = oficinas_d.codigo_fondo,tipo_documento where(doc_salida_origen.codigo_documento = documento.codigo_documento) and(doc_salida_destino.codigo_documento = documento.codigo_documento) and(documento.codigo_documento = movimientos_doc.codigo_documento) and(tipo_documento.codigo_tipo = documento.codigo_tipo) and((movimientos_doc.codigo_oficina like @as_oficina) and(movimientos_doc.codigo_fondo like @as_fondo) and(movimientos_doc.fecha_movimiento >= @ad_fecha_ini) and(movimientos_doc.fecha_movimiento <= @ad_fecha_fin) and(movimientos_doc.estado_movimiento = '3')) order by movimientos_doc.fecha_movimiento desc,movimientos_doc.hora_movimiento desc,movimientos_doc.codigo_documento desc,movimientos_doc.secuencia_movimiento desc end
;

create procedure "dba".sp_inserta_documento(in @TABLA integer,in @CODIGO_DOC char(10),in @CODIGO_TIPO char(2),in @NATURALEZA_DOC char(1),in @NUMERO_DOC char(6),in @FECHA_DOC date,in @ASUNTO_DOC long varchar,in @FOLIOS_DOC char(4),in @OBSERVA_DOC long varchar,in @FECHA_SYS date,in @HORA_SYS time,in @ULT_MODIF timestamp,in @USUARIO_ACTUAL char(8),in @ESTADO_DOC char(1))
/* RESULT ( column-name,... ) */
begin
  if @TABLA=1 then
    insert into documento(codigo_documento,
      codigo_tipo,naturaleza_documento,numero_documento,
      fecha_documento,asunto_documento,folios_documento,observa_documento,
      fecha_registro,hora_registro,ultima_modificacion,ultimo_usuario,
      estado_documento,postergado,cargo) values(
      @CODIGO_DOC,@CODIGO_TIPO,@NATURALEZA_DOC,@NUMERO_DOC,
      @FECHA_DOC,@ASUNTO_DOC,@FOLIOS_DOC,@OBSERVA_DOC,
      @FECHA_SYS,@HORA_SYS,@ULT_MODIF,@USUARIO_ACTUAL,
      @ESTADO_DOC,'N','N')
  else
    update DOCUMENTO set
      naturaleza_documento=@NATURALEZA_DOC,codigo_tipo=@CODIGO_TIPO,numero_documento=@NUMERO_DOC,
      fecha_documento=@FECHA_DOC,asunto_documento=@ASUNTO_DOC,observa_documento=@OBSERVA_DOC,
      folios_documento=@FOLIOS_DOC,fecha_registro=@FECHA_SYS,hora_registro=@HORA_SYS,ultima_modificacion=@ULT_MODIF,
      ultimo_usuario=@USUARIO_ACTUAL,estado_documento=@ESTADO_DOC
      where codigo_documento=@CODIGO_DOC
  end if
end
;

create procedure "dba".sp_inserta_movimientos_doc(in @OPCION integer,in @CODIGO_DOC char(10),in @SECUENCIA_MOV char(2),in @CODIGO_FON char(2),in @CODIGO_OFI char(4),in @CODIGO_SERIE char(6),in @CODIGO_EXP char(10),in @CODIGO_MOT char(2),in @CODIGO_INST char(6),in @ESTADO_MOV char(1),in @FECHA_MOV date,in @HORA_MOV time,in @OBSERVA_MOV long varchar,in @DOC_DERIVA char(10),in @CODIGO_INI char(10),in @ULTIMO_USU char(8),in @FONDO_DERIVA char(2),in @OFICINA_DERIVA char(4))
/* RESULT ( column-name,... ) */
begin
  if @OPCION=1 then
    insert into movimientos_doc(codigo_documento,
      secuencia_movimiento,codigo_fondo,codigo_oficina,
      codigo_serie,codigo_expediente,codigo_motivo,codigo_institucion,
      estado_movimiento,fecha_movimiento,hora_movimiento,observa_movimiento,
      doc_deriva,codigo_inicia,ultimo_usuario,fondo_deriva,
      oficina_deriva) values(
      @CODIGO_DOC,@SECUENCIA_MOV,@CODIGO_FON,@CODIGO_OFI,
      @CODIGO_SERIE,@CODIGO_EXP,@CODIGO_MOT,@CODIGO_INST,
      @ESTADO_MOV,@FECHA_MOV,@HORA_MOV,@OBSERVA_MOV,
      @DOC_DERIVA,@CODIGO_INI,@ULTIMO_USU,@FONDO_DERIVA,
      @OFICINA_DERIVA)
  else
    update MOVIMIENTOS_DOC set
      estado_movimiento=@ESTADO_MOV,fecha_movimiento=@FECHA_MOV,hora_movimiento=@HORA_MOV,ultimo_usuario=@ULTIMO_USU
      where codigo_documento=@CODIGO_DOC and secuencia_movimiento=@SECUENCIA_MOV
  end if
end
;

create procedure "dba".sp_institucion()
result(codigo_institucion char,descripcion_institucion char,cod_dpto char,cod_prov char)
begin
  select codigo_institucion,descripcion_institucion,cod_dpto,cod_prov
    from institucion order by
    descripcion_institucion asc
end
;

create procedure "DBA".sp_institucion_par(in @descrip char(30))
result(codigo_institucion char(6),descripcion_institucion varchar(80))
begin
  select codigo_institucion,descripcion_institucion
    from institucion
    where descripcion_institucion like @descrip+'%' order by descripcion_institucion asc
end
;

create procedure "dba".sp_lista_codigos(in @ofi char(4),in @fon char(2),in @fecha date,in @codigo char(10),in @naturaleza char(1),in @estado char(1))
result(codigo_documento char(10))
begin
  select movimientos_doc.codigo_documento
    from movimientos_doc
    ,documento
    where(documento.codigo_documento=movimientos_doc.codigo_documento)
    and((movimientos_doc.codigo_oficina like @ofi)
    and(movimientos_doc.codigo_fondo like @fon)
    and(movimientos_doc.fecha_movimiento=@fecha)
    and(movimientos_doc.codigo_documento>=@codigo)
    and(documento.naturaleza_documento=@naturaleza)
    and(movimientos_doc.estado_movimiento in(@estado)))
end
;

create procedure "DBA".sp_lista_contacto(in @CODIGO_INTITUCION char(6))
result(codigo_institucion char(6),nombre_contacto varchar(80),cargo_contacto varchar(80),grado_contacto varchar(80),codigo_pais char(4),cod_dpto char(2),cod_prov char(2),cod_dist char(2),codigo_contacto char(6),es_responsable char(1))
begin
  select codigo_institucion,
    nombre_contacto,
    cargo_contacto,
    grado_contacto,
    codigo_pais,
    cod_dpto,
    cod_prov,
    cod_dist,
    codigo_contacto,
    es_responsable
    from contactos
    where codigo_institucion=@CODIGO_INTITUCION order by
    nombre_contacto asc
end
;

create procedure "DBA".sp_lista_contacto_cod_nom(in @CODIGO_INTITUCION char(6),in @nombre_contacto char(80))
result(codigo_contacto char(6),nombre_contacto varchar(80))
begin
  select codigo_contacto,
    nombre_contacto
    from contactos
    where nombre_contacto like @nombre_contacto+'%'
    and codigo_institucion=@CODIGO_INTITUCION order by
    nombre_contacto asc
end
;

create procedure "DBA".sp_lista_contax(in @nombre char(80))
result(codigo_institucion char(6),nombre_institucion varchar(80),codigo_contacto char(6),nombre_contacto varchar(80))
begin
  select a.codigo_institucion,
    a.descripcion_institucion,
    b.codigo_contacto,
    b.nombre_contacto
    from institucion as a,contactos as b
    where a.codigo_institucion*=b.codigo_institucion
    and b.nombre_contacto like @nombre+'%' order by
    a.descripcion_institucion asc,b.nombre_contacto asc
end
;

create procedure "dba".sp_lista_expedientes(in @ofi char(4),in @codigo_serie char(6))
result(descripcion_expediente varchar(80),codigo_expediente char(10))
begin
  select expediente.descripcion_expediente,
    expediente.codigo_expediente
    from expediente
    where(expediente.codigo_oficina=@ofi)
    and(expediente.codigo_serie=@codigo_serie) order by
    expediente.descripcion_expediente asc
end
;

create procedure "DBA".sp_lista_instcontacto(in @nombre char(80))
result(codigo_institucion char(6),nombre_institucion varchar(80),codigo_contacto char(6),nombre_contacto varchar(80))
begin
  select a.codigo_institucion,
    a.descripcion_institucion,
    b.codigo_contacto,
    b.nombre_contacto
    from institucion as a,contactos as b
    where b.nombre_contacto like @nombre+'%'
    and a.codigo_institucion=b.codigo_institucion order by
    a.descripcion_institucion asc,b.nombre_contacto asc
end
;

create procedure "DBA".sp_lista_institucion()
result(codigo_institucion char(6),descripcion_institucion varchar(80),cod_dpto char(2),cod_prov char(2))
begin
  select codigo_institucion,descripcion_institucion,cod_dpto,cod_prov
    from institucion order by descripcion_institucion asc
end
;

create procedure "dba".sp_lista_oficinas()
result(codigo_oficina char(4),descripcion_oficina varchar(100))
begin
  select codigo_oficina,
    descripcion_oficina
    from oficinas
end
;

create procedure "dba".sp_lista_series(in @ofi char(4))
result(descripcion_serie varchar(80),codigo_serie char(6))
begin
  select serie_documental.descripcion_serie,
    serie_documental.codigo_serie
    from serie_documental
    where(serie_documental.codigo_oficina=@ofi) order by
    serie_documental.descripcion_serie asc
end
;

create procedure dba.sp_mesa_partes(in @as_oficina char(4),in @as_fondo char(2),in @ad_fecha_ini date,in @ad_fecha_fin date)
result(codigo_documento char(10),descripcion_oficina varchar(100),descripcion_tipo varchar(80),numero_documento char(6),naturaleza_documento char(1),fecha_documento date,codigo_oficina char(4),codigo_institucion char(6),descripcion_institucion varchar(80),siglas_institucion varchar(25),siglas_oficina varchar(20),fecha_movimiento date,hora_movimiento time,estado_movimiento char(1),descripcion_motivo varchar(80),asunto_documento long varchar,folios_documento char(4),observa_documento long varchar,descripcion_serie varchar(80),descripcion_expediente varchar(80),fecha_registro date,hora_registro time,ultima_modificacion timestamp,codigo_inicia char(10),secuencia_movimiento char(2),ultimo_usuario char(8),nombre_personal varchar(80),nombre_contacto varchar(80),es_multiple char(1),doc_deriva char(10),observa_movimiento long varchar,codigo_motivo char(2),"'N'" char(1),destino_documento char(4),abogadesignado char(8),flag_atenabogado char(1)) begin select movimientos_doc.codigo_documento,oficinas_a.descripcion_oficina,oficinas_b.descripcion_oficina,tipo_documento.descripcion_tipo,documento.numero_documento,documento.naturaleza_documento,documento.fecha_documento,doc_salida_origen.codigo_oficina,doc_salida_destino.codigo_institucion,institucion_a.descripcion_institucion,oficinas_c.descripcion_oficina,institucion_b.descripcion_institucion,oficinas_d.descripcion_oficina,institucion_b.siglas_institucion,oficinas_c.siglas_oficina,oficinas_b.siglas_oficina,movimientos_doc.fecha_movimiento,movimientos_doc.hora_movimiento,movimientos_doc.estado_movimiento,motivo.descripcion_motivo,documento.asunto_documento,documento.folios_documento,documento.observa_documento,serie_documental.descripcion_serie,expediente.descripcion_expediente,documento.fecha_registro,documento.hora_registro,documento.ultima_modificacion,movimientos_doc.codigo_inicia,movimientos_doc.secuencia_movimiento,doc_interno_origen.codigo_oficina,movimientos_doc.ultimo_usuario,personal_a.nombre_personal,personal_b.nombre_personal,personal_c.nombre_personal,personal_d.nombre_personal,contactos_a.nombre_contacto,contactos_b.nombre_contacto,tipo_documento.es_multiple,movimientos_doc.doc_deriva,movimientos_doc.observa_movimiento,movimientos_doc.codigo_motivo,'N',doc_interno_destino.codigo_oficina,doc_entrada.destino_documento,movimientos_doc.abogadesignado,movimientos_doc.flag_atenabogado from doc_salida_destino left outer join institucion as institucion_a on doc_salida_destino.codigo_institucion = institucion_a.codigo_institucion,documento left outer join doc_interno_destino on documento.codigo_documento = doc_interno_destino.codigo_documento,documento left outer join doc_interno_origen on documento.codigo_documento = doc_interno_origen.codigo_documento,doc_interno_destino left outer join oficinas as oficinas_a on doc_interno_destino.codigo_oficina = oficinas_a.codigo_oficina and doc_interno_destino.codigo_fondo = oficinas_a.codigo_fondo,doc_interno_origen left outer join oficinas as oficinas_b on doc_interno_origen.codigo_fondo = oficinas_b.codigo_fondo and doc_interno_origen.codigo_oficina = oficinas_b.codigo_oficina,doc_entrada left outer join institucion as institucion_b on doc_entrada.origen_documento = institucion_b.codigo_institucion,doc_entrada left outer join oficinas as oficinas_d on doc_entrada.destino_documento = oficinas_d.codigo_oficina and doc_entrada.fondo_destino = oficinas_d.codigo_fondo,doc_interno_origen left outer join personal as personal_a on doc_interno_origen.codigo_personal = personal_a.codigo_personal,doc_interno_destino left outer join personal as personal_b on doc_interno_destino.codigo_personal = personal_b.codigo_personal,doc_salida_origen left outer join personal as personal_c on doc_salida_origen.codigo_personal = personal_c.codigo_personal,doc_salida_destino left outer join contactos as contactos_a on doc_salida_destino.codigo_contacto = contactos_a.codigo_contacto,doc_entrada left outer join contactos as contactos_b on doc_entrada.remitente = contactos_b.codigo_contacto,doc_entrada left outer join personal as personal_d on doc_entrada.destinatario = personal_d.codigo_personal,doc_salida_origen left outer join oficinas as oficinas_c on doc_salida_origen.codigo_oficina = oficinas_c.codigo_oficina and doc_salida_origen.codigo_fondo = oficinas_c.codigo_fondo,documento left outer join doc_salida_origen on documento.codigo_documento = doc_salida_origen.codigo_documento,documento left outer join doc_salida_destino on documento.codigo_documento = doc_salida_destino.codigo_documento,documento left outer join doc_entrada on documento.codigo_documento = doc_entrada.codigo_documento,movimientos_doc left outer join motivo on movimientos_doc.codigo_motivo = motivo.codigo_motivo,movimientos_doc left outer join expediente on movimientos_doc.codigo_expediente = expediente.codigo_expediente and movimientos_doc.codigo_fondo = expediente.codigo_fondo and movimientos_doc.codigo_oficina = expediente.codigo_oficina and movimientos_doc.codigo_serie = expediente.codigo_serie,movimientos_doc left outer join serie_documental on movimientos_doc.codigo_fondo = serie_documental.codigo_fondo and movimientos_doc.codigo_oficina = serie_documental.codigo_oficina and movimientos_doc.codigo_serie = serie_documental.codigo_serie,tipo_documento where(documento.codigo_documento = movimientos_doc.codigo_documento) and(tipo_documento.codigo_tipo = documento.codigo_tipo) and((movimientos_doc.codigo_oficina like @as_oficina) and(movimientos_doc.codigo_fondo like @as_fondo)) and(movimientos_doc.fecha_movimiento >= @ad_fecha_ini) and(movimientos_doc.fecha_movimiento <= @ad_fecha_fin) order by movimientos_doc.fecha_movimiento desc,movimientos_doc.hora_movimiento desc,movimientos_doc.codigo_documento desc,movimientos_doc.secuencia_movimiento desc end
;

create procedure dba.sp_mesa_partes_web(in @as_oficina char(4),in @as_fondo char(2),in @ad_anis char(4),in @ad_mes char(2))
result(codigo_documento char(10),descripcion_oficina varchar(100),descripcion_tipo varchar(80),numero_documento char(6),naturaleza_documento char(1),fecha_documento date,codigo_oficina char(4),codigo_institucion char(6),descripcion_institucion varchar(80),siglas_institucion varchar(25),siglas_oficina varchar(20),fecha_movimiento date,hora_movimiento time,estado_movimiento char(1),descripcion_motivo varchar(80),asunto_documento long varchar,folios_documento char(4),observa_documento long varchar,descripcion_serie varchar(80),descripcion_expediente varchar(80),fecha_registro date,hora_registro time,ultima_modificacion timestamp,codigo_inicia char(10),secuencia_movimiento char(2),ultimo_usuario char(8),nombre_personal varchar(80),nombre_contacto varchar(80),es_multiple char(1),doc_deriva char(10),observa_movimiento long varchar,codigo_motivo char(2),"'N'" char(1),destino_documento char(4),abogadesignado char(8),flag_atenabogado char(1),as_campo char(30)) begin select movimientos_doc.codigo_documento,oficinas_a.descripcion_oficina,oficinas_b.descripcion_oficina,tipo_documento.descripcion_tipo,documento.numero_documento,documento.naturaleza_documento,documento.fecha_documento,doc_salida_origen.codigo_oficina,doc_salida_destino.codigo_institucion,institucion_a.descripcion_institucion,oficinas_c.descripcion_oficina,institucion_b.descripcion_institucion,oficinas_d.descripcion_oficina,institucion_b.siglas_institucion,oficinas_c.siglas_oficina,oficinas_b.siglas_oficina,movimientos_doc.fecha_movimiento,movimientos_doc.hora_movimiento,movimientos_doc.estado_movimiento,motivo.descripcion_motivo,documento.asunto_documento,documento.folios_documento,documento.observa_documento,serie_documental.descripcion_serie,expediente.descripcion_expediente,documento.fecha_registro,documento.hora_registro,documento.ultima_modificacion,movimientos_doc.codigo_inicia,movimientos_doc.secuencia_movimiento,doc_interno_origen.codigo_oficina,movimientos_doc.ultimo_usuario,personal_a.nombre_personal,personal_b.nombre_personal,personal_c.nombre_personal,personal_d.nombre_personal,contactos_a.nombre_contacto,contactos_b.nombre_contacto,tipo_documento.es_multiple,movimientos_doc.doc_deriva,movimientos_doc.observa_movimiento,movimientos_doc.codigo_motivo,'N',doc_interno_destino.codigo_oficina,doc_entrada.destino_documento,movimientos_doc.abogadesignado,movimientos_doc.flag_atenabogado,movimientos_doc.codigo_oficina+movimientos_doc.codigo_fondo+movimientos_doc.codigo_documento+movimientos_doc.secuencia_movimiento as as_campo from doc_salida_destino left outer join institucion as institucion_a on doc_salida_destino.codigo_institucion = institucion_a.codigo_institucion,documento left outer join doc_interno_destino on documento.codigo_documento = doc_interno_destino.codigo_documento,documento left outer join doc_interno_origen on documento.codigo_documento = doc_interno_origen.codigo_documento,doc_interno_destino left outer join oficinas as oficinas_a on doc_interno_destino.codigo_oficina = oficinas_a.codigo_oficina and doc_interno_destino.codigo_fondo = oficinas_a.codigo_fondo,doc_interno_origen left outer join oficinas as oficinas_b on doc_interno_origen.codigo_fondo = oficinas_b.codigo_fondo and doc_interno_origen.codigo_oficina = oficinas_b.codigo_oficina,doc_entrada left outer join institucion as institucion_b on doc_entrada.origen_documento = institucion_b.codigo_institucion,doc_entrada left outer join oficinas as oficinas_d on doc_entrada.destino_documento = oficinas_d.codigo_oficina and doc_entrada.fondo_destino = oficinas_d.codigo_fondo,doc_interno_origen left outer join personal as personal_a on doc_interno_origen.codigo_personal = personal_a.codigo_personal,doc_interno_destino left outer join personal as personal_b on doc_interno_destino.codigo_personal = personal_b.codigo_personal,doc_salida_origen left outer join personal as personal_c on doc_salida_origen.codigo_personal = personal_c.codigo_personal,doc_salida_destino left outer join contactos as contactos_a on doc_salida_destino.codigo_contacto = contactos_a.codigo_contacto,doc_entrada left outer join contactos as contactos_b on doc_entrada.remitente = contactos_b.codigo_contacto,doc_entrada left outer join personal as personal_d on doc_entrada.destinatario = personal_d.codigo_personal,doc_salida_origen left outer join oficinas as oficinas_c on doc_salida_origen.codigo_oficina = oficinas_c.codigo_oficina and doc_salida_origen.codigo_fondo = oficinas_c.codigo_fondo,documento left outer join doc_salida_origen on documento.codigo_documento = doc_salida_origen.codigo_documento,documento left outer join doc_salida_destino on documento.codigo_documento = doc_salida_destino.codigo_documento,documento left outer join doc_entrada on documento.codigo_documento = doc_entrada.codigo_documento,movimientos_doc left outer join motivo on movimientos_doc.codigo_motivo = motivo.codigo_motivo,movimientos_doc left outer join expediente on movimientos_doc.codigo_expediente = expediente.codigo_expediente and movimientos_doc.codigo_fondo = expediente.codigo_fondo and movimientos_doc.codigo_oficina = expediente.codigo_oficina and movimientos_doc.codigo_serie = expediente.codigo_serie,movimientos_doc left outer join serie_documental on movimientos_doc.codigo_fondo = serie_documental.codigo_fondo and movimientos_doc.codigo_oficina = serie_documental.codigo_oficina and movimientos_doc.codigo_serie = serie_documental.codigo_serie,tipo_documento where(documento.codigo_documento = movimientos_doc.codigo_documento) and(tipo_documento.codigo_tipo = documento.codigo_tipo) and(movimientos_doc.codigo_oficina like @as_oficina) and(movimientos_doc.codigo_fondo like @as_fondo) and(convert(char(4),year(movimientos_doc.fecha_movimiento)) = @ad_anis) and("RIGHT"('0'+convert(char(2),month(movimientos_doc.fecha_movimiento)),2) = @ad_mes) order by movimientos_doc.fecha_movimiento desc,movimientos_doc.hora_movimiento desc,movimientos_doc.codigo_documento desc,movimientos_doc.secuencia_movimiento desc end
;

create procedure dba.sp_mesa_partes_web_pend(in @as_oficina char(4),in @as_fondo char(2),in @ad_anis char(4),in @ad_mes char(2))
result(codigo_documento char(10),descripcion_oficina varchar(100),descripcion_tipo varchar(80),numero_documento char(6),naturaleza_documento char(1),fecha_documento date,codigo_oficina char(4),codigo_institucion char(6),descripcion_institucion varchar(80),siglas_institucion varchar(25),siglas_oficina varchar(20),fecha_movimiento date,hora_movimiento time,estado_movimiento char(1),descripcion_motivo varchar(80),asunto_documento long varchar,folios_documento char(4),observa_documento long varchar,descripcion_serie varchar(80),descripcion_expediente varchar(80),fecha_registro date,hora_registro time,ultima_modificacion timestamp,codigo_inicia char(10),secuencia_movimiento char(2),ultimo_usuario char(8),nombre_personal varchar(80),nombre_contacto varchar(80),es_multiple char(1),doc_deriva char(10),observa_movimiento long varchar,codigo_motivo char(2),"'N'" char(1),destino_documento char(4),abogadesignado char(8),flag_atenabogado char(1),as_campo char(30)) begin select movimientos_doc.codigo_documento,oficinas_a.descripcion_oficina,oficinas_b.descripcion_oficina,tipo_documento.descripcion_tipo,documento.numero_documento,documento.naturaleza_documento,documento.fecha_documento,doc_salida_origen.codigo_oficina,doc_salida_destino.codigo_institucion,institucion_a.descripcion_institucion,oficinas_c.descripcion_oficina,institucion_b.descripcion_institucion,oficinas_d.descripcion_oficina,institucion_b.siglas_institucion,oficinas_c.siglas_oficina,oficinas_b.siglas_oficina,movimientos_doc.fecha_movimiento,movimientos_doc.hora_movimiento,movimientos_doc.estado_movimiento,motivo.descripcion_motivo,documento.asunto_documento,documento.folios_documento,documento.observa_documento,serie_documental.descripcion_serie,expediente.descripcion_expediente,documento.fecha_registro,documento.hora_registro,documento.ultima_modificacion,movimientos_doc.codigo_inicia,movimientos_doc.secuencia_movimiento,doc_interno_origen.codigo_oficina,movimientos_doc.ultimo_usuario,personal_a.nombre_personal,personal_b.nombre_personal,personal_c.nombre_personal,personal_d.nombre_personal,contactos_a.nombre_contacto,contactos_b.nombre_contacto,tipo_documento.es_multiple,movimientos_doc.doc_deriva,movimientos_doc.observa_movimiento,movimientos_doc.codigo_motivo,'N',doc_interno_destino.codigo_oficina,doc_entrada.destino_documento,movimientos_doc.abogadesignado,movimientos_doc.flag_atenabogado,movimientos_doc.codigo_oficina+movimientos_doc.codigo_fondo+movimientos_doc.codigo_documento+movimientos_doc.secuencia_movimiento as as_campo from doc_salida_destino left outer join institucion as institucion_a on doc_salida_destino.codigo_institucion = institucion_a.codigo_institucion,documento left outer join doc_interno_destino on documento.codigo_documento = doc_interno_destino.codigo_documento,documento left outer join doc_interno_origen on documento.codigo_documento = doc_interno_origen.codigo_documento,doc_interno_destino left outer join oficinas as oficinas_a on doc_interno_destino.codigo_oficina = oficinas_a.codigo_oficina and doc_interno_destino.codigo_fondo = oficinas_a.codigo_fondo,doc_interno_origen left outer join oficinas as oficinas_b on doc_interno_origen.codigo_fondo = oficinas_b.codigo_fondo and doc_interno_origen.codigo_oficina = oficinas_b.codigo_oficina,doc_entrada left outer join institucion as institucion_b on doc_entrada.origen_documento = institucion_b.codigo_institucion,doc_entrada left outer join oficinas as oficinas_d on doc_entrada.destino_documento = oficinas_d.codigo_oficina and doc_entrada.fondo_destino = oficinas_d.codigo_fondo,doc_interno_origen left outer join personal as personal_a on doc_interno_origen.codigo_personal = personal_a.codigo_personal,doc_interno_destino left outer join personal as personal_b on doc_interno_destino.codigo_personal = personal_b.codigo_personal,doc_salida_origen left outer join personal as personal_c on doc_salida_origen.codigo_personal = personal_c.codigo_personal,doc_salida_destino left outer join contactos as contactos_a on doc_salida_destino.codigo_contacto = contactos_a.codigo_contacto,doc_entrada left outer join contactos as contactos_b on doc_entrada.remitente = contactos_b.codigo_contacto,doc_entrada left outer join personal as personal_d on doc_entrada.destinatario = personal_d.codigo_personal,doc_salida_origen left outer join oficinas as oficinas_c on doc_salida_origen.codigo_oficina = oficinas_c.codigo_oficina and doc_salida_origen.codigo_fondo = oficinas_c.codigo_fondo,documento left outer join doc_salida_origen on documento.codigo_documento = doc_salida_origen.codigo_documento,documento left outer join doc_salida_destino on documento.codigo_documento = doc_salida_destino.codigo_documento,documento left outer join doc_entrada on documento.codigo_documento = doc_entrada.codigo_documento,movimientos_doc left outer join motivo on movimientos_doc.codigo_motivo = motivo.codigo_motivo,movimientos_doc left outer join expediente on movimientos_doc.codigo_expediente = expediente.codigo_expediente and movimientos_doc.codigo_fondo = expediente.codigo_fondo and movimientos_doc.codigo_oficina = expediente.codigo_oficina and movimientos_doc.codigo_serie = expediente.codigo_serie,movimientos_doc left outer join serie_documental on movimientos_doc.codigo_fondo = serie_documental.codigo_fondo and movimientos_doc.codigo_oficina = serie_documental.codigo_oficina and movimientos_doc.codigo_serie = serie_documental.codigo_serie,tipo_documento where(documento.codigo_documento = movimientos_doc.codigo_documento) and movimientos_doc.estado_movimiento = '2' and(tipo_documento.codigo_tipo = documento.codigo_tipo) and(movimientos_doc.codigo_oficina like @as_oficina) and(movimientos_doc.codigo_fondo like @as_fondo) and(convert(char(4),year(movimientos_doc.fecha_movimiento)) = @ad_anis) and("RIGHT"('0'+convert(char(2),month(movimientos_doc.fecha_movimiento)),2) = @ad_mes) order by movimientos_doc.fecha_movimiento desc,movimientos_doc.hora_movimiento desc,movimientos_doc.codigo_documento desc,movimientos_doc.secuencia_movimiento desc end
;

create procedure dba.sp_mesa_partes_web_tram(in @as_oficina char(4),in @as_fondo char(2),in @ad_anis char(4),in @ad_mes char(2))
result(codigo_documento char(10),descripcion_oficina varchar(100),descripcion_tipo varchar(80),numero_documento char(6),naturaleza_documento char(1),fecha_documento date,codigo_oficina char(4),codigo_institucion char(6),descripcion_institucion varchar(80),siglas_institucion varchar(25),siglas_oficina varchar(20),fecha_movimiento date,hora_movimiento time,estado_movimiento char(1),descripcion_motivo varchar(80),asunto_documento long varchar,folios_documento char(4),observa_documento long varchar,descripcion_serie varchar(80),descripcion_expediente varchar(80),fecha_registro date,hora_registro time,ultima_modificacion timestamp,codigo_inicia char(10),secuencia_movimiento char(2),ultimo_usuario char(8),nombre_personal varchar(80),nombre_contacto varchar(80),es_multiple char(1),doc_deriva char(10),observa_movimiento long varchar,codigo_motivo char(2),"'N'" char(1),destino_documento char(4),abogadesignado char(8),flag_atenabogado char(1),as_campo char(30)) begin select movimientos_doc.codigo_documento,oficinas_a.descripcion_oficina,oficinas_b.descripcion_oficina,tipo_documento.descripcion_tipo,documento.numero_documento,documento.naturaleza_documento,documento.fecha_documento,doc_salida_origen.codigo_oficina,doc_salida_destino.codigo_institucion,institucion_a.descripcion_institucion,oficinas_c.descripcion_oficina,institucion_b.descripcion_institucion,oficinas_d.descripcion_oficina,institucion_b.siglas_institucion,oficinas_c.siglas_oficina,oficinas_b.siglas_oficina,movimientos_doc.fecha_movimiento,movimientos_doc.hora_movimiento,movimientos_doc.estado_movimiento,motivo.descripcion_motivo,documento.asunto_documento,documento.folios_documento,documento.observa_documento,serie_documental.descripcion_serie,expediente.descripcion_expediente,documento.fecha_registro,documento.hora_registro,documento.ultima_modificacion,movimientos_doc.codigo_inicia,movimientos_doc.secuencia_movimiento,doc_interno_origen.codigo_oficina,movimientos_doc.ultimo_usuario,personal_a.nombre_personal,personal_b.nombre_personal,personal_c.nombre_personal,personal_d.nombre_personal,contactos_a.nombre_contacto,contactos_b.nombre_contacto,tipo_documento.es_multiple,movimientos_doc.doc_deriva,movimientos_doc.observa_movimiento,movimientos_doc.codigo_motivo,'N',doc_interno_destino.codigo_oficina,doc_entrada.destino_documento,movimientos_doc.abogadesignado,movimientos_doc.flag_atenabogado,movimientos_doc.codigo_oficina+movimientos_doc.codigo_fondo+movimientos_doc.codigo_documento+movimientos_doc.secuencia_movimiento as as_campo from doc_salida_destino left outer join institucion as institucion_a on doc_salida_destino.codigo_institucion = institucion_a.codigo_institucion,documento left outer join doc_interno_destino on documento.codigo_documento = doc_interno_destino.codigo_documento,documento left outer join doc_interno_origen on documento.codigo_documento = doc_interno_origen.codigo_documento,doc_interno_destino left outer join oficinas as oficinas_a on doc_interno_destino.codigo_oficina = oficinas_a.codigo_oficina and doc_interno_destino.codigo_fondo = oficinas_a.codigo_fondo,doc_interno_origen left outer join oficinas as oficinas_b on doc_interno_origen.codigo_fondo = oficinas_b.codigo_fondo and doc_interno_origen.codigo_oficina = oficinas_b.codigo_oficina,doc_entrada left outer join institucion as institucion_b on doc_entrada.origen_documento = institucion_b.codigo_institucion,doc_entrada left outer join oficinas as oficinas_d on doc_entrada.destino_documento = oficinas_d.codigo_oficina and doc_entrada.fondo_destino = oficinas_d.codigo_fondo,doc_interno_origen left outer join personal as personal_a on doc_interno_origen.codigo_personal = personal_a.codigo_personal,doc_interno_destino left outer join personal as personal_b on doc_interno_destino.codigo_personal = personal_b.codigo_personal,doc_salida_origen left outer join personal as personal_c on doc_salida_origen.codigo_personal = personal_c.codigo_personal,doc_salida_destino left outer join contactos as contactos_a on doc_salida_destino.codigo_contacto = contactos_a.codigo_contacto,doc_entrada left outer join contactos as contactos_b on doc_entrada.remitente = contactos_b.codigo_contacto,doc_entrada left outer join personal as personal_d on doc_entrada.destinatario = personal_d.codigo_personal,doc_salida_origen left outer join oficinas as oficinas_c on doc_salida_origen.codigo_oficina = oficinas_c.codigo_oficina and doc_salida_origen.codigo_fondo = oficinas_c.codigo_fondo,documento left outer join doc_salida_origen on documento.codigo_documento = doc_salida_origen.codigo_documento,documento left outer join doc_salida_destino on documento.codigo_documento = doc_salida_destino.codigo_documento,documento left outer join doc_entrada on documento.codigo_documento = doc_entrada.codigo_documento,movimientos_doc left outer join motivo on movimientos_doc.codigo_motivo = motivo.codigo_motivo,movimientos_doc left outer join expediente on movimientos_doc.codigo_expediente = expediente.codigo_expediente and movimientos_doc.codigo_fondo = expediente.codigo_fondo and movimientos_doc.codigo_oficina = expediente.codigo_oficina and movimientos_doc.codigo_serie = expediente.codigo_serie,movimientos_doc left outer join serie_documental on movimientos_doc.codigo_fondo = serie_documental.codigo_fondo and movimientos_doc.codigo_oficina = serie_documental.codigo_oficina and movimientos_doc.codigo_serie = serie_documental.codigo_serie,tipo_documento where(documento.codigo_documento = movimientos_doc.codigo_documento) and movimientos_doc.estado_movimiento = '3' and(tipo_documento.codigo_tipo = documento.codigo_tipo) and(movimientos_doc.codigo_oficina like @as_oficina) and(movimientos_doc.codigo_fondo like @as_fondo) and(convert(char(4),year(movimientos_doc.fecha_movimiento)) = @ad_anis) and("RIGHT"('0'+convert(char(2),month(movimientos_doc.fecha_movimiento)),2) = @ad_mes) order by movimientos_doc.fecha_movimiento desc,movimientos_doc.hora_movimiento desc,movimientos_doc.codigo_documento desc,movimientos_doc.secuencia_movimiento desc end
;

create procedure "DBA".sp_oficina()
result(codigo_oficina char(4),codigo_fondo char(2),descripcion_oficina varchar(100),doc_entrada char(1),doc_salida char(1),doc_interno char(1),es_activo char(1))
begin
  select codigo_oficina,codigo_fondo,descripcion_oficina,doc_entrada,doc_salida,doc_interno,es_activo
    from oficinas order by
    descripcion_oficina asc
end
;

create procedure dba.sp_recorrido_documento(in @CODIGO_INICIA char(10))
result(fecha_movimiento date,descripcion_motivo varchar(80),hora_movimiento time,codigo_documento char(10),secuencia_movimiento char(2),estado_movimiento char(1),descripcion_oficina varchar(100),descripcion_institucion varchar(80),naturaleza_documento char(1),numero_documento char(6),asunto_documento long varchar,fecha_documento date,descripcion_tipo varchar(80),estado_documento char(1),doc_deriva char(10),siglas_institucion varchar(25),siglas_oficina varchar(20),ultimo_usuario char(8),observa_movimiento long varchar,oficina_deriva char(4)) begin select movimientos_doc.fecha_movimiento,motivo.descripcion_motivo,movimientos_doc.hora_movimiento,movimientos_doc.codigo_documento,movimientos_doc.secuencia_movimiento,movimientos_doc.estado_movimiento,oficinas_a.descripcion_oficina,institucion_a.descripcion_institucion,documento.naturaleza_documento,documento.numero_documento,documento.asunto_documento,documento.fecha_documento,tipo_documento.descripcion_tipo,documento.estado_documento,movimientos_doc.doc_deriva,institucion_b.siglas_institucion,oficinas_b.siglas_oficina,oficinas_c.siglas_oficina,movimientos_doc.ultimo_usuario,movimientos_doc.observa_movimiento,movimientos_doc.oficina_deriva from movimientos_doc left outer join motivo on movimientos_doc.codigo_motivo = motivo.codigo_motivo,movimientos_doc left outer join institucion as institucion_a on movimientos_doc.codigo_institucion = institucion_a.codigo_institucion,documento left outer join doc_entrada on documento.codigo_documento = doc_entrada.codigo_documento,documento left outer join doc_interno_origen on documento.codigo_documento = doc_interno_origen.codigo_documento,documento left outer join doc_salida_origen on documento.codigo_documento = doc_salida_origen.codigo_documento,doc_entrada left outer join institucion as institucion_b on doc_entrada.origen_documento = institucion_b.codigo_institucion,movimientos_doc left outer join oficinas as oficinas_a on movimientos_doc.codigo_fondo = oficinas_a.codigo_fondo and movimientos_doc.codigo_oficina = oficinas_a.codigo_oficina,doc_interno_origen left outer join oficinas as oficinas_b on doc_interno_origen.codigo_fondo = oficinas_b.codigo_fondo and doc_interno_origen.codigo_oficina = oficinas_b.codigo_oficina,doc_salida_origen left outer join oficinas as oficinas_c on doc_salida_origen.codigo_fondo = oficinas_c.codigo_fondo and doc_salida_origen.codigo_oficina = oficinas_c.codigo_oficina,tipo_documento where(documento.codigo_documento = movimientos_doc.codigo_documento) and(tipo_documento.codigo_tipo = documento.codigo_tipo) and((movimientos_doc.codigo_inicia = @CODIGO_INICIA)) order by movimientos_doc.codigo_documento asc,movimientos_doc.secuencia_movimiento asc end
;

create procedure "dba".sp_series_expedientes(in @ofi char(4))
result(descripcion_serie varchar(80),codigo_serie char(6),descripcion_expediente varchar(80),codigo_expediente char(10))
begin
  select serie_documental.descripcion_serie,
    serie_documental.codigo_serie,
    expediente.descripcion_expediente,
    expediente.codigo_expediente
    from expediente
    ,serie_documental
    where(expediente.codigo_fondo=serie_documental.codigo_fondo)
    and(expediente.codigo_oficina=serie_documental.codigo_oficina)
    and(serie_documental.codigo_oficina=@ofi) order by
    serie_documental.descripcion_serie asc,expediente.descripcion_expediente asc
end
;

create procedure dba.sp_ultimo_recorrido(in @CODIGO_doc char(10),in @ult_secuencia char(2))
result(fecha_movimiento date,descripcion_motivo varchar(80),hora_movimiento time,codigo_documento char(10),secuencia_movimiento char(2),estado_movimiento char(1),descripcion_oficina varchar(100),descripcion_institucion varchar(80),naturaleza_documento char(1),numero_documento char(6),asunto_documento long varchar,fecha_documento date,descripcion_tipo varchar(80),estado_documento char(1),doc_deriva char(10),siglas_institucion varchar(25),siglas_oficina varchar(20),ultimo_usuario char(8),observa_movimiento long varchar,oficina_deriva char(4)) begin select movimientos_doc.fecha_movimiento,motivo.descripcion_motivo,movimientos_doc.hora_movimiento,movimientos_doc.codigo_documento,movimientos_doc.secuencia_movimiento,movimientos_doc.estado_movimiento,oficinas_a.descripcion_oficina,institucion_a.descripcion_institucion,documento.naturaleza_documento,documento.numero_documento,documento.asunto_documento,documento.fecha_documento,tipo_documento.descripcion_tipo,documento.estado_documento,movimientos_doc.doc_deriva,institucion_b.siglas_institucion,oficinas_b.siglas_oficina,oficinas_c.siglas_oficina,movimientos_doc.ultimo_usuario,movimientos_doc.observa_movimiento,movimientos_doc.oficina_deriva from movimientos_doc left outer join motivo on movimientos_doc.codigo_motivo = motivo.codigo_motivo,movimientos_doc left outer join institucion as institucion_a on movimientos_doc.codigo_institucion = institucion_a.codigo_institucion,documento left outer join doc_entrada on documento.codigo_documento = doc_entrada.codigo_documento,documento left outer join doc_interno_origen on documento.codigo_documento = doc_interno_origen.codigo_documento,documento left outer join doc_salida_origen on documento.codigo_documento = doc_salida_origen.codigo_documento,doc_entrada left outer join institucion as institucion_b on doc_entrada.origen_documento = institucion_b.codigo_institucion,movimientos_doc left outer join oficinas as oficinas_a on movimientos_doc.codigo_fondo = oficinas_a.codigo_fondo and movimientos_doc.codigo_oficina = oficinas_a.codigo_oficina,doc_interno_origen left outer join oficinas as oficinas_b on doc_interno_origen.codigo_fondo = oficinas_b.codigo_fondo and doc_interno_origen.codigo_oficina = oficinas_b.codigo_oficina,doc_salida_origen left outer join oficinas as oficinas_c on doc_salida_origen.codigo_fondo = oficinas_c.codigo_fondo and doc_salida_origen.codigo_oficina = oficinas_c.codigo_oficina,tipo_documento where(documento.codigo_documento = movimientos_doc.codigo_documento) and(tipo_documento.codigo_tipo = documento.codigo_tipo) and((movimientos_doc.codigo_inicia = @CODIGO_doc)) and movimientos_doc.secuencia_movimiento = @ult_secuencia order by movimientos_doc.codigo_documento asc,movimientos_doc.secuencia_movimiento asc end
;
